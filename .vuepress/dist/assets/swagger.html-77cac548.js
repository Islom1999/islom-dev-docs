import{_ as n,o as a,c as s,d as t}from"./app-a9a991a6.js";const o={},e=t(`<h1 id="ðŸ“”-swagger-ulash" tabindex="-1"><a class="header-anchor" href="#ðŸ“”-swagger-ulash" aria-hidden="true">#</a> ðŸ“” Swagger ulash</h1><p>Swagger UI-ni Nest.js proyektingizda ulab ishlatish uchun quyidagi qadam-larni bajaring:</p><ol><li><p><code>@nestjs/swagger</code> va <code>swagger-ui-express</code> kutubxonalarni o&#39;rnatish: Terminalda Nest.js-proyekt katalogida quyidagi buyruqlarni bajarib, kutubxonalarni o&#39;rnatishni boshlang:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> @nestjs/swagger swagger-ui-express
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>SwaggerModule</code>ni sozlash: <code>main.ts</code> faylda <code>SwaggerModule</code> ni qo&#39;shing:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NestFactory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> SwaggerModule<span class="token punctuation">,</span> DocumentBuilder <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/swagger&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AppModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.module&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">await</span> NestFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>AppModule<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DocumentBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&#39;API Documentation&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">setDescription</span><span class="token punctuation">(</span><span class="token string">&#39;API documentation for your Nest.js application&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">setVersion</span><span class="token punctuation">(</span><span class="token string">&#39;1.0&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> document <span class="token operator">=</span> SwaggerModule<span class="token punctuation">.</span><span class="token function">createDocument</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>
  SwaggerModule<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token string">&#39;api&#39;</span><span class="token punctuation">,</span> app<span class="token punctuation">,</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Bu kodda, <code>DocumentBuilder</code> obyektini yaratib, Swagger-ni konfiguratsiyalaymiz. Siz <code>setTitle</code>, <code>setDescription</code> va <code>setVersion</code> metodlar orqali ma&#39;lumotlarni sozlay olasiz.</p><p><code>SwaggerModule.createDocument</code> metodi <code>app</code> va <code>config</code> obyektlarini o&#39;z ichiga oladi va Swagger YAML ma&#39;lumotlarini generatsiya qiladi.</p><p><code>SwaggerModule.setup</code> metodi Swagger UI-ni qo&#39;llab-quvvatlaydigan konfiguratsiyani amalga oshiradi. Birinchi argument <code>api</code> manzilini taqdim etadi, API dokumentatsiyasiga qanday kirish mumkinligini bildiradi.</p></li><li><p>Kode qo&#39;shimcha javoblar kiritish: Endpointlaringizda Swagger-dan qo&#39;shimcha ma&#39;lumotlar kiritish uchun Nest.js-decorators laridan foydalanishingiz mumkin. Masalan, <code>@ApiTags</code>, <code>@ApiOperation</code>, <code>@ApiParam</code>, <code>@ApiResponse</code> kabi dekoratorlarni <code>@Controller</code> va <code>@Api</code> dekoratorlarni qo&#39;shib qo&#39;ying:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Controller<span class="token punctuation">,</span> Get<span class="token punctuation">,</span> Param <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ApiTags<span class="token punctuation">,</span> ApiOperation<span class="token punctuation">,</span> ApiParam<span class="token punctuation">,</span> ApiResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/swagger&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">ApiTags</span></span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UsersController</span> <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">ApiOperation</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> summary<span class="token operator">:</span> <span class="token string">&#39;Get user by ID&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">ApiParam</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> description<span class="token operator">:</span> <span class="token string">&#39;User ID&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">ApiResponse</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> description<span class="token operator">:</span> <span class="token string">&#39;User found&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">ApiResponse</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token number">404</span><span class="token punctuation">,</span> description<span class="token operator">:</span> <span class="token string">&#39;User not found&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;:id&#39;</span><span class="token punctuation">)</span>
  <span class="token function">getUserById</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Param</span></span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span> id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Ma&#39;lumotlarni qaytarish</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Bu misolda <code>@ApiTags</code> dekoratori <code>users</code> tegini belgilaydi, <code>@ApiOperation</code> dekoratori <code>Get user by ID</code> deb belgilangan am</p></li></ol><p>alni ta&#39;rifi bilan birlikda foydalaniladi. <code>@ApiParam</code> dekoratori <code>id</code> nomli parameterga izoh beradi, <code>@ApiResponse</code> dekoratori esa 200 va 404 HTTP kodlari bilan javob berishni belgilaydi.</p><ol start="4"><li><p>Serverni ishga tushirish: Terminalda proyektni katalogida quyidagi buyruqlarni bajarib, serverni ishga tushiring:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Swagger UI-ni kuzatish: Brauzeringizda <code>http://localhost:3000/api</code> manzilini oching (yoki <code>http://localhost:3000/api-json</code> manzilini o&#39;zingiz tanlangan ma&#39;lumot turlarini ko&#39;rish uchun). Bu manzilda Swagger UI sahifasi ko&#39;rinadi va API-ni sinab ko&#39;rish uchun interfeysni taklif qiladi.</p></li></ol><p>Ushbu jarayonlar natijasida siz Nest.js-proyektingizda Swagger UI-ni muvaffaqiyatli ulab ishlatgan bo&#39;lasiz. Swagger UI-ni foydalanish orqali API-ni dokumentatsiyasini va sinov interfeysini qulaylik bilan ko&#39;rish imkoniyatiga ega bo&#39;lasiz. Qo&#39;shimcha ma&#39;lumotlarni dekoratorlar yordamida belgilash, API-ni tavsiflash va sinov qilishni osonlashtiradi.</p>`,6),p=[e];function i(c,l){return a(),s("div",null,p)}const r=n(o,[["render",i],["__file","swagger.html.vue"]]);export{r as default};
