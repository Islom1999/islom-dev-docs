import{_ as s,o as n,c as a,d as e}from"./app-a9a991a6.js";const t={},o=e(`<h1 id="ðŸ“”-session" tabindex="-1"><a class="header-anchor" href="#ðŸ“”-session" aria-hidden="true">#</a> ðŸ“” Session</h1><p>NestJS, Node.js uchun TypeScript asosida ishlaydigan bir web ilovalarining server-bazalari kerakli ko&#39;plab imkoniyatlarni beradi. Sessiyalarga malumot saqlash uchun NestJS, sessiya boshqaruvi va ma&#39;lumotlar saqlash uchun middleware yordamida xizmat qiladi.</p><p>Sessiyalarni saqlash uchun avvalo &quot;express-session&quot; yoki o&#39;zgartirilgan variantisini o&#39;rnatishingiz kerak. Ushbu modul Node.js&#39;ning Express frameworki uchun sessiyalarni boshqarish imkonini beradi. NestJS esa Express&#39;ni asosiy ko&#39;rishdagi avtobus uchun framework sifatida ishlatadi. Shuning uchun, &quot;express-session&quot; modulini NestJS loyihangizga o&#39;rnatishingiz mumkin.</p><p>Quyidagi qadamlar orqali NestJS&#39;da sessiyalarga malumotni saqlashingiz mumkin:</p><ol><li>Sessiyalarni boshqarish uchun &quot;express-session&quot; modulini o&#39;rnatish:</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> express-session
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>NestJS aplikatsiyangizdagi <code>main.ts</code> faylida <code>app.use()</code> bilan sessiya middleware-ni qo&#39;shing:</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NestFactory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AppModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.module&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> session <span class="token keyword">from</span> <span class="token string">&#39;express-session&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">await</span> NestFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>AppModule<span class="token punctuation">)</span><span class="token punctuation">;</span>

  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
    <span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      secret<span class="token operator">:</span> <span class="token string">&#39;your-secret-key&#39;</span><span class="token punctuation">,</span> <span class="token comment">// Muayyan bir kalit so&#39;z</span>
      resave<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      saveUninitialized<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Endpoints (nuqtalar) yaratishda sessiya ma&#39;lumotlariga murojaat qiling. Misol uchun, sessiyalarga malumot qo&#39;shish uchun endpoint yarating:</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Controller<span class="token punctuation">,</span> Get<span class="token punctuation">,</span> Req <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Request <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;express&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token string">&#39;example&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ExampleController</span> <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;add-session&#39;</span><span class="token punctuation">)</span>
  <span class="token function">addSession</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Req</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> request<span class="token operator">:</span> Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token string">&#39;Hello, Session!&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Sessiyaga ma&#39;lumot yozish</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Session data added!&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;get-session&#39;</span><span class="token punctuation">)</span>
  <span class="token function">getSession</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Req</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> request<span class="token operator">:</span> Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> sessionData <span class="token operator">=</span> request<span class="token punctuation">.</span>session<span class="token punctuation">.</span>data<span class="token punctuation">;</span> <span class="token comment">// Sessiyadan ma&#39;lumot olish</span>
    <span class="token keyword">return</span> sessionData<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Yaratilgan <code>add-session</code> va <code>get-session</code> nuqtalariga HTTP so&#39;rovlari orqali murojaat qilishingiz mumkin. <code>add-session</code> nuqtasi sessiyaga &quot;Hello, Session!&quot; deb nomlangan ma&#39;lumot yozadi va <code>get-session</code> nuqtasida sessiyadan ushbu ma&#39;lumotni olish mumkin.</p><p>Shunday qilib, yaratilgan sessiyalardagi ma&#39;lumotlarni saqlash va ulardan foydalanish imkoniyati mavjud bo&#39;ladi. Buni boshqarish uchun &quot;express-session&quot; modulini NestJS&#39;d</p>`,12),p=[o];function i(l,c){return n(),a("div",null,p)}const r=s(t,[["render",i],["__file","session.html.vue"]]);export{r as default};
