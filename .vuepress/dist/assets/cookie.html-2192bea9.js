import{_ as n,o as s,c as a,d as o}from"./app-a9a991a6.js";const t={},e=o(`<h1 id="ðŸ“”-cookie" tabindex="-1"><a class="header-anchor" href="#ðŸ“”-cookie" aria-hidden="true">#</a> ðŸ“” Cookie</h1><p>NestJS, cookie&#39;larga ma&#39;lumot saqlash uchun tayyorlangan modullarni o&#39;rnatish orqali osonlik bilan ishlayadi. &quot;cookie-parser&quot; moduli yordamida NestJS loyihangizda cookie&#39;larga ma&#39;lumot saqlash imkoniyatini yaratishingiz mumkin. Quyidagi qadamlar orqali NestJS&#39;da cookie&#39;larga ma&#39;lumot saqlashingiz mumkin:</p><ol><li>&quot;cookie-parser&quot; modulini o&#39;rnatish:</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> cookie-parser
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>NestJS aplikatsiyangizdagi <code>main.ts</code> faylida <code>cookieParser()</code> middleware-ni qo&#39;shing:</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NestFactory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AppModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.module&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> cookieParser <span class="token keyword">from</span> <span class="token string">&#39;cookie-parser&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">await</span> NestFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>AppModule<span class="token punctuation">)</span><span class="token punctuation">;</span>

  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cookieParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Endpoints (nuqtalar) yaratishda cookie&#39;larga ma&#39;lumot yozing va o&#39;qishing. Misol uchun, cookie&#39;ga ma&#39;lumot yozish uchun endpoint yarating:</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Controller<span class="token punctuation">,</span> Get<span class="token punctuation">,</span> Res <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Response <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;express&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token string">&#39;example&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ExampleController</span> <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;set-cookie&#39;</span><span class="token punctuation">)</span>
  <span class="token function">setCookie</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Res</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> response<span class="token operator">:</span> Response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    response<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">&#39;exampleCookie&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Hello, Cookie!&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> maxAge<span class="token operator">:</span> <span class="token number">3600000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Cookie yozish</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Cookie set!&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;get-cookie&#39;</span><span class="token punctuation">)</span>
  <span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Req</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> request<span class="token operator">:</span> Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> exampleCookie <span class="token operator">=</span> request<span class="token punctuation">.</span>cookies<span class="token punctuation">[</span><span class="token string">&#39;exampleCookie&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Cookie&#39;dan ma&#39;lumot olish</span>
    <span class="token keyword">return</span> exampleCookie<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Yaratilgan <code>set-cookie</code> va <code>get-cookie</code> nuqtalariga HTTP so&#39;rovlari orqali murojaat qilishingiz mumkin. <code>set-cookie</code> nuqtasi &quot;exampleCookie&quot; nomli cookie&#39;ga &quot;Hello, Cookie!&quot; deb nomlangan ma&#39;lumot yozadi va <code>get-cookie</code> nuqtasida ushbu cookie&#39;dan ma&#39;lumotni olish mumkin.</p><p>Shunday qilib, yaratilgan cookie&#39;larga ma&#39;lumot yozish va ulardan foydalanish imkoniyati mavjud bo&#39;ladi. Buni boshqarish uchun &quot;cookie-parser&quot; modulini NestJS&#39;da ishlatishingiz mumkin.</p>`,10),p=[e];function i(c,l){return s(),a("div",null,p)}const k=n(t,[["render",i],["__file","cookie.html.vue"]]);export{k as default};
