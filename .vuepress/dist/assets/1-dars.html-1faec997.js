import{_ as r,r as o,o as c,c as u,a,e as s,w as e,b as n,f as l,d as i}from"./app-a9a991a6.js";const d="/image_js/html-css-js.png",m="/image_js/html-css-js-2.png",k={},v=a("h1",{id:"ðŸ“”-1-dars",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#ðŸ“”-1-dars","aria-hidden":"true"},"#"),n(" ðŸ“” 1-dars")],-1),g={class:"table-of-contents"},b=i('<h2 id="kirish" tabindex="-1"><a class="header-anchor" href="#kirish" aria-hidden="true">#</a> Kirish</h2><h3 id="javascript-haqida" tabindex="-1"><a class="header-anchor" href="#javascript-haqida" aria-hidden="true">#</a> Javascript haqida</h3><p>Javascript - web uchun maxsus yuqori darajadagi (high-level) dasturlash tili. Uning yordamida HTML va CSS&#39;ni dinamik darzda o&#39;zgartirish imkoniyati mavjud. Hayotiy o&#39;xshatish</p><img src="'+d+'"><ul><li>Web asoslarini kundalik ishlatatigan tilimizga o&#39;xshatadigan bo&#39;lsak, HTML - ot (noun), CSS - sifat (adjective), Javascript esa fe&#39;l (verb) va&#39;zifasini bajaradi</li></ul><img src="'+m+`"><h3 id="amaliyotda-qo-llanilishi" tabindex="-1"><a class="header-anchor" href="#amaliyotda-qo-llanilishi" aria-hidden="true">#</a> Amaliyotda qo&#39;llanilishi</h3><ol><li><p>Frontend development - Javascript yordamida veb sahifaga dinamik ko&#39;rinishda qo&#39;shimchalar qo&#39;shish, masalan matn va kontentni o&#39;zgartirish, rasmlarni o&#39;lchovini o&#39;zgartirish va h.k. Undan tashqari JS freymvorklar yordamida veb sayt ishlab chiqish jarayonini ancha tez va oson amalga oshirish imkoniyati mavjud</p></li><li><p>Backend development - JS&#39;ga asoslangan NodeJS texnologiyasi orqali backend ya&#39;ni server-side dasturlashni amalga oshirish imkoniyati mavjud</p></li><li><p>Mobile application development - ReactNative va shunga o&#39;xshash texnologiyalar orqali Hybrid ko&#39;rinishda mobil ilovalar yaratish imkoniyati mavjud</p></li><li><p>Game development - Online o&#39;yinlar yaratishda Javascript ham faol tarzda ishlatilinadi</p></li></ol><h3 id="javascript-versiyalari-javascript-vs-ecmascript" tabindex="-1"><a class="header-anchor" href="#javascript-versiyalari-javascript-vs-ecmascript" aria-hidden="true">#</a> Javascript versiyalari - Javascript vs ECMAScript</h3><p>Javascript - umumiy maqsadga yo&#39;naltirilgan scripting til bo&#39;lib, ECMAScript tomonidan belgilangan spetsifikatsiyalarga javob beradi. Boshqacha qilib aytganda, ECMAScript scripting til uchun reja (blueprint, standard) bo&#39;lsa, Javascript esa bu standard&#39;ning amalga oshirilishidir.</p><h2 id="ma-lumot-turlari" tabindex="-1"><a class="header-anchor" href="#ma-lumot-turlari" aria-hidden="true">#</a> Ma&#39;lumot turlari</h2><p>Ma&#39;lumotlar yoki qiymatlar ma&#39;lumotlar turlariga ega. Ma&#39;lumotlar turlari ma&#39;lumotlarning xususiyatlarini tavsiflaydi. Ma&#39;lumotlar turlarini ikkiga bo&#39;lish mumkin:</p><ol><li>Primitiv ma&#39;lumotlar turlari</li><li>Oddiy bo&#39;lmagan ma&#39;lumotlar turlari (ob&#39;ektga havolalar)</li></ol><h3 id="primitiv-ma-lumotlar-turlari" tabindex="-1"><a class="header-anchor" href="#primitiv-ma-lumotlar-turlari" aria-hidden="true">#</a> Primitiv ma&#39;lumotlar turlari</h3><p>JavaScript-dagi primitive ma&#39;lumotlar turlariga quyidagilar kiradi:</p><ol><li>Raqamlar - butun sonlar, vergulli(Float)</li><li>Satrlar - bitta qo&#39;shtirnoq ostidagi har qanday ma&#39;lumotlar, qo&#39;sh tirnoq yoki teskari tirnoq</li><li>Mantiqiy qiymatlar - true yoki false qiymat</li><li>Null - bo&#39;sh qiymat yoki qiymat yo&#39;q</li><li>Undefined - qiymatsiz e&#39;lon qilingan o&#39;zgaruvchi</li></ol><p>JavaScript-dagi Non-primitive(oddiy bo&#39;lmagan) ma&#39;lumotlar turlarini o&#39;z ichiga oladi:</p><ol><li>Ob&#39;ektlar</li><li>Funksiyalar</li><li>Massivlar</li></ol><p>Keling, Primitive va Primitive bo&#39;lmagan ma&#39;lumotlar turlari nimani anglatishini ko&#39;rib chiqaylik. <em>Primitiv</em> ma&#39;lumotlar turlari o&#39;zgarmas (o&#39;zgartirilmaydigan) ma&#39;lumotlar turlaridir. Bir Primitive ma&#39;lumotlar turi yaratilgandan keyin biz uni o&#39;zgartira olmaymiz.</p><p><strong>Misol:</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> word <span class="token operator">=</span> <span class="token string">&#39;JavaScript&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Agar biz <em>word</em> o&#39;zgaruvchisida saqlangan satrni o&#39;zgartirishga harakat qilsak, JavaScript xatoga yo&#39;l qo&#39;yishi kerak. Bitta qo&#39;shtirnoq, qo&#39;sh qo&#39;shtirnoq yoki teskari tirnoq ostidagi har qanday ma&#39;lumotlar turi satr ma&#39;lumotlar turidir.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>word<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Y&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bu ifoda <em>word</em> o&#39;zgaruvchisida saqlangan qatorni o&#39;zgartirmaydi. Shunday qilib, biz satrlarni o&#39;zgartirib bo&#39;lmaydigan yoki boshqacha qilib aytganda o&#39;zgarmas deb aytishimiz mumkin. Primitiv ma&#39;lumotlar turlari qiymatlari bo&#39;yicha taqqoslanadi. Keling, turli xil ma&#39;lumotlar qiymatlarini solishtiraylik. Quyidagi misolga qarang:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> numOne <span class="token operator">=</span> <span class="token number">3</span>
<span class="token keyword">let</span> numTwo <span class="token operator">=</span> <span class="token number">3</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numOne <span class="token operator">==</span> numTwo<span class="token punctuation">)</span>      <span class="token comment">// true</span>

<span class="token keyword">let</span> js <span class="token operator">=</span> <span class="token string">&#39;JavaScript&#39;</span>
<span class="token keyword">let</span> py <span class="token operator">=</span> <span class="token string">&#39;Python&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>js <span class="token operator">==</span> py<span class="token punctuation">)</span>             <span class="token comment">//false </span>

<span class="token keyword">let</span> lightOn <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">let</span> lightOff <span class="token operator">=</span> <span class="token boolean">false</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lightOn <span class="token operator">==</span> lightOff<span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="non-primitiv-ma-lumotlar-turlari" tabindex="-1"><a class="header-anchor" href="#non-primitiv-ma-lumotlar-turlari" aria-hidden="true">#</a> Non-Primitiv ma&#39;lumotlar turlari</h3><p>Primitiv bo&#39;lmagan ma&#39;lumotlar turlari o&#39;zgartirilishi yoki o&#39;zgarishi mumkin. Biz primitive bo&#39;lmagan ma&#39;lumotlar turlarining qiymatini yaratilgandan keyin o&#39;zgartirishimiz mumkin. Keling, massiv yaratish orqali ko&#39;raylik. Massiv - kvadrat qavs ichidagi ma&#39;lumotlar qiymatlari ro&#39;yxati. Massivlar bir xil yoki turli xil ma&#39;lumotlarni o&#39;z ichiga olishi mumkin. Massiv qiymatlariga ularning indeksi orqali havola qilinadi. JavaScript-da massiv indeksi noldan boshlanadi. Ya&#39;ni, massivning 1-elementi indeks 0 da, 2-element 1-indeksda, 3-element esa 2-indeksda va hokazo.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>  <span class="token comment">// [10, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ko&#39;rib turganingizdek, primitiv bo&#39;lmagan ma&#39;lumotlar turi bo&#39;lgan massiv o&#39;zgaruvchan. Primitiv bo&#39;lmagan ma&#39;lumotlar turlarini qiymat bo&#39;yicha taqqoslab bo&#39;lmaydi. Ikki primitive bo&#39;lmagan ma&#39;lumotlar turi bir xil xususiyat va qiymatlarga ega bo&#39;lsa ham, ular qat&#39;iy teng emas.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token comment">// 2 ta massivni solishtiramiz va ular qat&#39;iy teng emas!</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nums <span class="token operator">==</span> numbers<span class="token punctuation">)</span>  <span class="token comment">// false</span>

<span class="token keyword">let</span> userOne <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span>
<span class="token literal-property property">role</span><span class="token operator">:</span><span class="token string">&#39;teaching&#39;</span><span class="token punctuation">,</span>
<span class="token literal-property property">country</span><span class="token operator">:</span><span class="token string">&#39;Finland&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> userTwo <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span>
<span class="token literal-property property">role</span><span class="token operator">:</span><span class="token string">&#39;teaching&#39;</span><span class="token punctuation">,</span>
<span class="token literal-property property">country</span><span class="token operator">:</span><span class="token string">&#39;Finland&#39;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 2 ta obyektni solishtiramiz va ular qat&#39;iy teng emas!</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userOne <span class="token operator">==</span> userTwo<span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Asosiy qoida, biz primitive bo&#39;lmagan ma&#39;lumotlar turlarini solishtirmaymiz. Massivlarni, funktsiyalarni yoki ob&#39;ektlarni solishtirmang. Primitiv bo&#39;lmagan qiymatlar mos yozuvlar turlari deb ataladi, chunki ular qiymat o&#39;rniga mos yozuvlar bilan taqqoslanadi. Ikki ob&#39;ekt faqat bir xil asosiy ob&#39;ektga tegishli bo&#39;lsa, qat&#39;iy tengdir.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> numbers <span class="token operator">=</span> nums

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nums <span class="token operator">==</span> numbers<span class="token punctuation">)</span>  <span class="token comment">// true</span>

<span class="token keyword">let</span> userOne <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span>
<span class="token literal-property property">role</span><span class="token operator">:</span><span class="token string">&#39;teaching&#39;</span><span class="token punctuation">,</span>
<span class="token literal-property property">country</span><span class="token operator">:</span><span class="token string">&#39;Finland&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> userTwo <span class="token operator">=</span> userOne

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userOne <span class="token operator">==</span> userTwo<span class="token punctuation">)</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Agar siz primitive ma&#39;lumotlar turlari va primitive bo&#39;lmagan ma&#39;lumotlar turlari o&#39;rtasidagi farqni tushunishda qiynalayotgan bo&#39;lsangiz, siz yagona emassiz. Tinchlaning va faqat keyingi bo&#39;limga o&#39;ting va biroz vaqt o&#39;tgach qaytib kelishga harakat qiling. Endi raqamlar turi bo&#39;yicha ma&#39;lumotlar turlarini boshlaylik.</p><h2 id="raqamlar" tabindex="-1"><a class="header-anchor" href="#raqamlar" aria-hidden="true">#</a> Raqamlar</h2><p>Raqamlar barcha arifmetik amallarni bajara oladigan butun va o&#39;nlik qiymatlardir. Keling, raqamlarning ba&#39;zi misollarini ko&#39;rib chiqaylik.</p><h3 id="raqamli-ma-lumotlar-turlarini-e-lon-qilish" tabindex="-1"><a class="header-anchor" href="#raqamli-ma-lumotlar-turlarini-e-lon-qilish" aria-hidden="true">#</a> Raqamli ma&#39;lumotlar turlarini e&#39;lon qilish</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">35</span>
<span class="token keyword">const</span> gravity <span class="token operator">=</span> <span class="token number">9.81</span>  <span class="token comment">// o&#39;zgarmas qiymatlar uchun const dan foydalanamiz, tortishish doimiysi m/s2</span>
<span class="token keyword">let</span> mass <span class="token operator">=</span> <span class="token number">72</span>         <span class="token comment">// Kilogrammdagi massa</span>
<span class="token keyword">const</span> <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">3.14</span>       <span class="token comment">// pi geometrik doimiy</span>

<span class="token comment">// Ko&#39;proq misollar</span>
<span class="token keyword">const</span> boilingPoint <span class="token operator">=</span> <span class="token number">100</span> <span class="token comment">// oC dagi harorat, doimiy bo&#39;lgan suvning qaynash nuqtasi</span>
<span class="token keyword">const</span> bodyTemp <span class="token operator">=</span> <span class="token number">37</span>      <span class="token comment">// oC inson tanasining o&#39;rtacha harorati, bu doimiy</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">,</span> gravity<span class="token punctuation">,</span> mass<span class="token punctuation">,</span> <span class="token constant">PI</span><span class="token punctuation">,</span> boilingPoint<span class="token punctuation">,</span> bodyTemp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="satrlar" tabindex="-1"><a class="header-anchor" href="#satrlar" aria-hidden="true">#</a> Satrlar</h2><p>Satrlar - bu <strong><em>bitta( &#39; )</em></strong> , <em><strong>qo&#39;sh( &quot; )</strong></em>, <em><strong>orqa( \` ESC ni tagida)</strong></em> belgisi ostidagi matnlar. Satrni e&#39;lon qilish uchun bizga o&#39;zgaruvchi nomi, belgilash operatori, bitta qo&#39;shtirnoq ostidagi qiymat, qo&#39;sh qo&#39;shtirnoq yoki teskari tirnoq kerak. Keling, qatorlarning ba&#39;zi misollarini ko&#39;rib chiqaylik:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> space <span class="token operator">=</span> <span class="token string">&#39; &#39;</span>           <span class="token comment">// bo&#39;sh joy satri</span>
<span class="token keyword">let</span> firstName <span class="token operator">=</span> <span class="token string">&#39;Asabeneh&#39;</span>
<span class="token keyword">let</span> lastName <span class="token operator">=</span> <span class="token string">&#39;Yetayeh&#39;</span>
<span class="token keyword">let</span> country <span class="token operator">=</span> <span class="token string">&#39;Finland&#39;</span>
<span class="token keyword">let</span> city <span class="token operator">=</span> <span class="token string">&#39;Helsinki&#39;</span>
<span class="token keyword">let</span> language <span class="token operator">=</span> <span class="token string">&#39;JavaScript&#39;</span>
<span class="token keyword">let</span> job <span class="token operator">=</span> <span class="token string">&#39;teacher&#39;</span>
<span class="token keyword">let</span> quote <span class="token operator">=</span> <span class="token string">&quot;The saying,&#39;Seeing is Believing&#39; is not correct in 2022.&quot;</span>
<span class="token keyword">let</span> quotWithBackTick <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The saying,&#39;Seeing is Believing&#39; is not correct in 2022.</span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="satrlarni-birlashtirish" tabindex="-1"><a class="header-anchor" href="#satrlarni-birlashtirish" aria-hidden="true">#</a> Satrlarni birlashtirish</h3><p>Ikki yoki undan ortiq qatorlarni bir-biriga bog&#39;lash birlashma deyiladi. Oldingi String bo&#39;limida e&#39;lon qilingan satrlardan foydalanish:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> fullName <span class="token operator">=</span> firstName <span class="token operator">+</span> space <span class="token operator">+</span> lastName<span class="token punctuation">;</span> <span class="token comment">// birlashtirish, ikki qatorni birlashtirish.</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fullName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Asabeneh Yetayeh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Biz satrlarni turli yo&#39;llar bilan birlashtira olamiz.</p><h2 id="undefined" tabindex="-1"><a class="header-anchor" href="#undefined" aria-hidden="true">#</a> Undefined</h2><p>O&#39;sha haqiqat qiymatlarini va yolg&#39;on qiymatlarini eslash yaxshidir. Keyingi bo&#39;limda biz ularni qaror qabul qilish uchun shartlar bilan ishlatamiz.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> firstName
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>firstName<span class="token punctuation">)</span> <span class="token comment">//aniqlanmagan, chunki u hali qiymatga tayinlanmagan</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="null" tabindex="-1"><a class="header-anchor" href="#null" aria-hidden="true">#</a> Null</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> empty <span class="token operator">=</span> <span class="token keyword">null</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>empty<span class="token punctuation">)</span> <span class="token comment">// -&gt; null , qiymat yo&#39;q degan ma&#39;noni anglatadi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window-methodlari" tabindex="-1"><a class="header-anchor" href="#window-methodlari" aria-hidden="true">#</a> Window methodlari</h2><h3 id="window-alert-method" tabindex="-1"><a class="header-anchor" href="#window-alert-method" aria-hidden="true">#</a> Window alert() method</h3><p>Eng boshida ko&#39;rganingizdek, alert() usuli ma&#39;lum bir xabar va OK tugmasi bilan ogohlantirish oynasini ko&#39;rsatadi. Bu o&#39;rnatilgan usul va u argumentni oladi.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">alert</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Welcome to 30DaysOfJavaScript&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Juda ko&#39;p ogohlantirishdan foydalanmang, chunki u buzadi va bezovta qiladi, uni faqat sinab ko&#39;rish uchun foydalaning.</p><h3 id="window-prompt-method" tabindex="-1"><a class="header-anchor" href="#window-prompt-method" aria-hidden="true">#</a> Window prompt() method</h3><p>Oynaning so&#39;rov usullari kirish qiymatlarini olish uchun brauzeringizda kirish bilan so&#39;rov oynasini ko&#39;rsatadi va kiritilgan ma&#39;lumotlar o&#39;zgaruvchida saqlanishi mumkin. prompt() usuli ikkita argumentni oladi. Ikkinchi dalil ixtiyoriydir.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&#39;required text&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;optional text&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&#39;Enter number&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;number goes here&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="window-confirm-method" tabindex="-1"><a class="header-anchor" href="#window-confirm-method" aria-hidden="true">#</a> Window confirm() method</h3><p>confirm() usuli OK va Bekor qilish tugmasi bilan birga belgilangan xabarga ega dialog oynasini ko&#39;rsatadi. Tasdiqlash oynasi ko&#39;pincha foydalanuvchidan biror narsani bajarish uchun ruxsat so&#39;rash uchun ishlatiladi. Window confirm() argument sifatida qatorni oladi. OK tugmasini bosish haqiqiy qiymatni beradi, Bekor qilish tugmasini bosish esa noto&#39;g&#39;ri qiymatni beradi.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> agree <span class="token operator">=</span> <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;Are you sure you like to delete? &#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>agree<span class="token punctuation">)</span> <span class="token comment">// dialog oynasida bosgan narsangizga qarab natija rost yoki noto&#39;g&#39;ri bo&#39;ladi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Bu barcha oyna usullari emas, biz oyna usullariga chuqur kirish uchun alohida bo&#39;limga ega bo&#39;lamiz.</p><h2 id="operatorlar" tabindex="-1"><a class="header-anchor" href="#operatorlar" aria-hidden="true">#</a> Operatorlar</h2><h3 id="belgilash-operatorlari" tabindex="-1"><a class="header-anchor" href="#belgilash-operatorlari" aria-hidden="true">#</a> Belgilash operatorlari</h3><p>JavaScript-dagi tenglik belgisi tayinlash operatoridir. U o&#39;zgaruvchini tayinlash uchun foydalanadi.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> firstName <span class="token operator">=</span> <span class="token string">&#39;Asabeneh&#39;</span>
<span class="token keyword">let</span> country <span class="token operator">=</span> <span class="token string">&#39;Finland&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Belgilash operatorlari</p>`,69),h=i(`<h3 id="arifmetik-operatorlar" tabindex="-1"><a class="header-anchor" href="#arifmetik-operatorlar" aria-hidden="true">#</a> Arifmetik operatorlar</h3><p>Arifmetik operatorlar matematik operatorlardir.</p><ul><li>Qo&#39;sish(+): a + b</li><li>Ayirish(-): a - b</li><li>Ko&#39;paytirish (*): a * b</li><li>Bo&#39;lish(/): a / b</li><li>Modul(%): a % b</li><li>Eksponensial(Daraja)(**): a ** b</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> numOne <span class="token operator">=</span> <span class="token number">4</span>
<span class="token keyword">let</span> numTwo <span class="token operator">=</span> <span class="token number">3</span>
<span class="token keyword">let</span> sum <span class="token operator">=</span> numOne <span class="token operator">+</span> numTwo
<span class="token keyword">let</span> diff <span class="token operator">=</span> numOne <span class="token operator">-</span> numTwo
<span class="token keyword">let</span> mult <span class="token operator">=</span> numOne <span class="token operator">*</span> numTwo
<span class="token keyword">let</span> div <span class="token operator">=</span> numOne <span class="token operator">/</span> numTwo
<span class="token keyword">let</span> remainder <span class="token operator">=</span> numOne <span class="token operator">%</span> numTwo
<span class="token keyword">let</span> powerOf <span class="token operator">=</span> numOne <span class="token operator">**</span> numTwo

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> diff<span class="token punctuation">,</span> mult<span class="token punctuation">,</span> div<span class="token punctuation">,</span> remainder<span class="token punctuation">,</span> powerOf<span class="token punctuation">)</span> <span class="token comment">// 7,1,12,1.33,1, 64</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">3.14</span>
<span class="token keyword">let</span> radius <span class="token operator">=</span> <span class="token number">100</span>          <span class="token comment">// metrda</span>

<span class="token comment">//Doira maydonini hisoblaymiz </span>
<span class="token keyword">const</span> areaOfCircle <span class="token operator">=</span> <span class="token constant">PI</span> <span class="token operator">*</span> radius <span class="token operator">*</span> radius
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>areaOfCircle<span class="token punctuation">)</span>  <span class="token comment">//  314 m</span>


<span class="token keyword">const</span> gravity <span class="token operator">=</span> <span class="token number">9.81</span>      <span class="token comment">// in m/s2</span>
<span class="token keyword">let</span> mass <span class="token operator">=</span> <span class="token number">72</span>             <span class="token comment">// Kilogrammda</span>

<span class="token comment">// Ob&#39;ektning og&#39;irligini hisoblaymiz </span>
<span class="token keyword">const</span> weight <span class="token operator">=</span> mass <span class="token operator">*</span> gravity
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>weight<span class="token punctuation">)</span>        <span class="token comment">// 706.32 N(Nyuton)</span>

<span class="token keyword">const</span> boilingPoint <span class="token operator">=</span> <span class="token number">100</span>  <span class="token comment">// harorat oC, suvning qaynash nuqtasi </span>
<span class="token keyword">const</span> bodyTemp <span class="token operator">=</span> <span class="token number">37</span>       <span class="token comment">// tana harorati oC</span>


<span class="token comment">// Satr interpolyatsiyasi yordamida raqamlar bilan qatorni birlashtirish</span>
<span class="token comment">/*
 The boiling point of water is 100 oC.
 Human body temperature is 37 oC.
 The gravity of earth is 9.81 m/s2.
 */</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The boiling point of water is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>boilingPoint<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> oC.\\nHuman body temperature is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>bodyTemp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> oC.\\nThe gravity of earth is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>gravity<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> m / s2.</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="taqqoslash-operatorlari" tabindex="-1"><a class="header-anchor" href="#taqqoslash-operatorlari" aria-hidden="true">#</a> Taqqoslash operatorlari</h3><p>Dasturlashda biz qiymatlarni solishtiramiz, ikkita qiymatni solishtirish uchun taqqoslash operatorlaridan foydalanamiz. Biz qiymatning boshqa qiymatdan katta yoki kichik yoki teng ekanligini tekshiramiz.</p>`,7),y=i(`<p><strong>Misol: Taqqoslash operatorlari</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span>              <span class="token comment">// true,  chunki 3 katta 2 dan </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">)</span>             <span class="token comment">// true,  chunki 3 katta 2 dan</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>              <span class="token comment">// false, chunki 3 katta 2 dan</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>              <span class="token comment">// true,  chunki 2 kichik 3 dan</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span>             <span class="token comment">// true,  chunki 2 kichik 3 dan</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>             <span class="token comment">// false, chunki 3 2 ga teng emas</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span>             <span class="token comment">// true,  chunki 3 2 ga teng emas</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">==</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span>           <span class="token comment">// true,  chunki faqat qiymatlar solishtirildi</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">===</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span>          <span class="token comment">// false, chunki qiymatlar va ma&#39;lumot turi solishtirildi</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">!==</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span>          <span class="token comment">// true,  chunki qiymatlar va ma&#39;lumot turi solishtirildi</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span>             <span class="token comment">// false, chunki faqat qiymatlar solishtirildi</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">!==</span> <span class="token number">3</span><span class="token punctuation">)</span>            <span class="token comment">// false, chunki qiymatlar va ma&#39;lumot turi solishtirildi</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span>         <span class="token comment">// true,  ekvivalent</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span>        <span class="token comment">// false, aynan bir xil emas</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>            <span class="token comment">// true,  ekvivalent</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">==</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>           <span class="token comment">// true,  ekvivalent</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>           <span class="token comment">// false, aynan bir xil emas</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span>          <span class="token comment">// true,  ekvivalent</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span>         <span class="token comment">// false, aynan bir xil emas</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">undefined</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">undefined</span> <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">NaN</span> <span class="token operator">==</span> <span class="token number">NaN</span><span class="token punctuation">)</span>         <span class="token comment">// false, teng emas</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span><span class="token punctuation">)</span>        <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token number">NaN</span><span class="token punctuation">)</span>         <span class="token comment">// number</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;mango&#39;</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token string">&#39;avocado&#39;</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>  <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;mango&#39;</span><span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token string">&#39;avocado&#39;</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>  <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;mango&#39;</span><span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token string">&#39;avocado&#39;</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>   <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;milk&#39;</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token string">&#39;meat&#39;</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>      <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;milk&#39;</span><span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token string">&#39;meat&#39;</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>      <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;tomato&#39;</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token string">&#39;potato&#39;</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>  <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;python&#39;</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token string">&#39;dragon&#39;</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>   <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Yuqoridagi taqqoslashlarni qandaydir mantiq bilan tushunishga harakat qiling. Hech qanday mantiqsiz eslab qolish qiyin bo&#39;lishi mumkin. JavaScript - bu qandaydir simli dasturlash tili. JavaScript kodi ishlaydi va sizga natija beradi, lekin agar siz buni yaxshi bilmasangiz, kerakli natija bo&#39;lmasligi mumkin.</p><p>Umumiy qoida sifatida, agar qiymat == bilan to&#39;g&#39;ri bo&#39;lmasa, u === bilan teng bo&#39;lmaydi. === dan foydalanish == dan ko&#39;ra xavfsizroqdir. Quyidagi havolada ma&#39;lumotlar turlarini taqqoslashning to&#39;liq ro&#39;yxati mavjud.</p><h3 id="mantiqiy-operatorlar" tabindex="-1"><a class="header-anchor" href="#mantiqiy-operatorlar" aria-hidden="true">#</a> Mantiqiy operatorlar</h3><p>Quyidagi belgilar umumiy mantiqiy operatorlardir: &amp;&amp;(ampersand) , ||(quvur) and !(inkor). <em>&amp;&amp;</em> operatori faqat ikkita operand rost bo&#39;lsa rost bo&#39;ladi. <em>||</em> operator to&#39;g&#39;ri bo&#39;ladi, agar operandlardan biri rost bo&#39;ladi. <em>!</em> operator rostdan noto&#39;g&#39;riga va noto&#39;g&#39;ridan rostga rad etadi.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// &amp;&amp; ampersand operatoriga misol</span>

<span class="token keyword">const</span> check <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">&gt;</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> <span class="token number">10</span> <span class="token operator">&gt;</span> <span class="token number">5</span>         <span class="token comment">// true &amp;&amp; true -&gt; true</span>
<span class="token keyword">const</span> check <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">&gt;</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> <span class="token number">10</span> <span class="token operator">&lt;</span> <span class="token number">5</span>         <span class="token comment">// true &amp;&amp; false -&gt; false</span>
<span class="token keyword">const</span> check <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> <span class="token number">10</span> <span class="token operator">&lt;</span> <span class="token number">5</span>         <span class="token comment">// false &amp;&amp; false -&gt; false</span>

<span class="token comment">// || quvur yoki operator, misol</span>

<span class="token keyword">const</span> check <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">&gt;</span> <span class="token number">3</span> <span class="token operator">||</span> <span class="token number">10</span> <span class="token operator">&gt;</span> <span class="token number">5</span>         <span class="token comment">// true  || true -&gt; true</span>
<span class="token keyword">const</span> check <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">&gt;</span> <span class="token number">3</span> <span class="token operator">||</span> <span class="token number">10</span> <span class="token operator">&lt;</span> <span class="token number">5</span>         <span class="token comment">// true  || false -&gt; true</span>
<span class="token keyword">const</span> check <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token operator">||</span> <span class="token number">10</span> <span class="token operator">&lt;</span> <span class="token number">5</span>         <span class="token comment">// false || false -&gt; false</span>

<span class="token comment">// ! Inkor qilish misollari</span>

<span class="token keyword">let</span> check <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">&gt;</span> <span class="token number">3</span>                     <span class="token comment">// true</span>
<span class="token keyword">let</span> check <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span>                  <span class="token comment">//  false</span>
<span class="token keyword">let</span> isLightOn <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">let</span> isLightOff <span class="token operator">=</span> <span class="token operator">!</span>isLightOn           <span class="token comment">// false</span>
<span class="token keyword">let</span> isMarried <span class="token operator">=</span> <span class="token operator">!</span><span class="token boolean">false</span>                <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="o-sish-operatori" tabindex="-1"><a class="header-anchor" href="#o-sish-operatori" aria-hidden="true">#</a> O&#39;sish operatori</h3><p>JavaScrip-da biz o&#39;zgaruvchida saqlangan qiymatni oshirish uchun oshirish operatoridan foydalanamiz. O&#39;sish oldingi yoki keyingi o&#39;sish bo&#39;lishi mumkin. Keling, ularning har birini ko&#39;rib chiqaylik:</p><ol><li>Pre-increment (Oldindan oshirish)</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">++</span>count<span class="token punctuation">)</span>        <span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>          <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>Post-increment (Keyin oshirish)</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token comment">// 0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>          <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Biz ko&#39;pincha o&#39;sishdan keyin foydalanamiz. Hech bo&#39;lmaganda post-increment operatoridan qanday foydalanishni eslab qolishingiz kerak.</p><h3 id="kamaytirish-operatori" tabindex="-1"><a class="header-anchor" href="#kamaytirish-operatori" aria-hidden="true">#</a> Kamaytirish operatori</h3><p>JavaScrip-da biz o&#39;zgaruvchida saqlangan qiymatni kamaytirish uchun kamaytirish operatoridan foydalanamiz. Kamaytirish dekretsiyadan oldin yoki keyin bo&#39;lishi mumkin. Keling, ularning har birini ko&#39;rib chiqaylik:</p><ol><li>Pre-decrement (Oldindan kamaytirish)</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">--</span>count<span class="token punctuation">)</span> <span class="token comment">// -1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>  <span class="token comment">// -1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Post-decrement (Keyin kamaytirish)</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>   <span class="token comment">// -1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uchlik-ternar-operatorlari" tabindex="-1"><a class="header-anchor" href="#uchlik-ternar-operatorlari" aria-hidden="true">#</a> Uchlik(Ternar) operatorlari</h3><p>Uchlik operator shart yozishga imkon beradi. Shartlarni yozishning yana bir usuli - uchlik operatorlardan foydalanish. Quyidagi misollarni ko&#39;rib chiqing:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> isRaining <span class="token operator">=</span> <span class="token boolean">true</span>
isRaining
  <span class="token operator">?</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;You need a rain coat.&#39;</span><span class="token punctuation">)</span>
  <span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;No need for a rain coat.&#39;</span><span class="token punctuation">)</span>
isRaining <span class="token operator">=</span> <span class="token boolean">false</span>

isRaining
  <span class="token operator">?</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;You need a rain coat.&#39;</span><span class="token punctuation">)</span>
  <span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;No need for a rain coat.&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>You need a rain coat.
No need <span class="token keyword">for</span> a rain coat.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token number">5</span>
number <span class="token operator">&gt;</span> <span class="token number">0</span>
  <span class="token operator">?</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>number<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is a positive number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>number<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is a negative number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
number <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5</span>

number <span class="token operator">&gt;</span> <span class="token number">0</span>
  <span class="token operator">?</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>number<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is a positive number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>number<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is a negative number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">5</span> is a positive number
<span class="token parameter variable">-5</span> is a negative number
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="operator-ustunligi" tabindex="-1"><a class="header-anchor" href="#operator-ustunligi" aria-hidden="true">#</a> Operator ustunligi</h3>`,27),f={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence",target:"_blank",rel:"noopener noreferrer"},q=i('<h2 id="ðŸ’»-mashqlar" tabindex="-1"><a class="header-anchor" href="#ðŸ’»-mashqlar" aria-hidden="true">#</a> ðŸ’» Mashqlar:</h2><ol><li>O&#39;zgaruvchini e&#39;lon qiling va uni <strong>&#39;Javascript&#39;</strong> boshlang&#39;ich qiymatiga belgilang va uni consolega chiqaring.</li><li><strong>Prompt</strong> yordamida ism va familiya kiriting ularni <strong>name</strong> va <strong>lastName</strong> ozgarivchilariga taminlab bitta <strong>alertda ism familiyani</strong> qo&#39;shib chiqaring.</li><li><strong>Prompt</strong> yordamida tug&#39;ilgan yil kiritilsin va hozirgi yildan ayrilib necha yoshda ekanligi alertda ko&#39;rsatilsin.</li><li><strong>soat</strong> nomli o&#39;zgaruvchi va uning qiymati bor. <strong>consolega</strong> shu soat qancha <strong>minutlarga sekondlarga va millisekondlarga</strong> tengligini chiqaring.</li><li><strong>a</strong> va <strong>b</strong> son bor shu sonlarni <strong>ko&#39;paytmasini</strong> <strong>c</strong> songa tenglashtirib <strong>consolega</strong> chiqaring.</li><li><strong>a</strong> va <strong>b</strong> sonlar mavjud shu sonlarning <strong>o&#39;rta arifmetigini</strong> hisoblab <strong>consolega</strong> chiqaring. <br> (o&#39;rta arifmetik barcha sonlar yig&#39;indisini nechta sonligiga bo&#39;linadi <strong>M: (12 + 34)/2</strong> )</li><li><strong>a</strong> , <strong>b</strong>, <strong>c</strong> sonlar mavjud shu sonlarning <strong>o&#39;rta arifmetigini</strong> hisoblab <strong>consolega</strong> chiqaring. <br> (o&#39;rta arifmetik barcha sonlar yig&#39;indisini nechta sonligiga bo&#39;linadi <strong>M: (12 + 34 + 45)/3</strong>)</li></ol>',2);function w(j,z){const t=o("router-link"),p=o("ExternalLinkIcon");return c(),u("div",null,[v,a("nav",g,[a("ul",null,[a("li",null,[s(t,{to:"#kirish"},{default:e(()=>[n("Kirish")]),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#javascript-haqida"},{default:e(()=>[n("Javascript haqida")]),_:1})]),a("li",null,[s(t,{to:"#amaliyotda-qo-llanilishi"},{default:e(()=>[n("Amaliyotda qo'llanilishi")]),_:1})]),a("li",null,[s(t,{to:"#javascript-versiyalari-javascript-vs-ecmascript"},{default:e(()=>[n("Javascript versiyalari - Javascript vs ECMAScript")]),_:1})])])]),a("li",null,[s(t,{to:"#ma-lumot-turlari"},{default:e(()=>[n("Ma'lumot turlari")]),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#primitiv-ma-lumotlar-turlari"},{default:e(()=>[n("Primitiv ma'lumotlar turlari")]),_:1})]),a("li",null,[s(t,{to:"#non-primitiv-ma-lumotlar-turlari"},{default:e(()=>[n("Non-Primitiv ma'lumotlar turlari")]),_:1})])])]),a("li",null,[s(t,{to:"#raqamlar"},{default:e(()=>[n("Raqamlar")]),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#raqamli-ma-lumotlar-turlarini-e-lon-qilish"},{default:e(()=>[n("Raqamli ma'lumotlar turlarini e'lon qilish")]),_:1})])])]),a("li",null,[s(t,{to:"#satrlar"},{default:e(()=>[n("Satrlar")]),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#satrlarni-birlashtirish"},{default:e(()=>[n("Satrlarni birlashtirish")]),_:1})])])]),a("li",null,[s(t,{to:"#undefined"},{default:e(()=>[n("Undefined")]),_:1})]),a("li",null,[s(t,{to:"#null"},{default:e(()=>[n("Null")]),_:1})]),a("li",null,[s(t,{to:"#window-methodlari"},{default:e(()=>[n("Window methodlari")]),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#window-alert-method"},{default:e(()=>[n("Window alert() method")]),_:1})]),a("li",null,[s(t,{to:"#window-prompt-method"},{default:e(()=>[n("Window prompt() method")]),_:1})]),a("li",null,[s(t,{to:"#window-confirm-method"},{default:e(()=>[n("Window confirm() method")]),_:1})])])]),a("li",null,[s(t,{to:"#operatorlar"},{default:e(()=>[n("Operatorlar")]),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#belgilash-operatorlari"},{default:e(()=>[n("Belgilash operatorlari")]),_:1})]),a("li",null,[s(t,{to:"#arifmetik-operatorlar"},{default:e(()=>[n("Arifmetik operatorlar")]),_:1})]),a("li",null,[s(t,{to:"#taqqoslash-operatorlari"},{default:e(()=>[n("Taqqoslash operatorlari")]),_:1})]),a("li",null,[s(t,{to:"#mantiqiy-operatorlar"},{default:e(()=>[n("Mantiqiy operatorlar")]),_:1})]),a("li",null,[s(t,{to:"#o-sish-operatori"},{default:e(()=>[n("O'sish operatori")]),_:1})]),a("li",null,[s(t,{to:"#kamaytirish-operatori"},{default:e(()=>[n("Kamaytirish operatori")]),_:1})]),a("li",null,[s(t,{to:"#uchlik-ternar-operatorlari"},{default:e(()=>[n("Uchlik(Ternar) operatorlari")]),_:1})]),a("li",null,[s(t,{to:"#operator-ustunligi"},{default:e(()=>[n("Operator ustunligi")]),_:1})])])]),a("li",null,[s(t,{to:"#ðŸ’»-mashqlar"},{default:e(()=>[n("ðŸ’» Mashqlar:")]),_:1})])])]),b,l(" ![Assignment operators](../images/assignment_operators.png) "),h,l(" ![Comparison Operators](../images/comparison_operators.png) "),y,a("p",null,[a("a",f,[n("Men sizga ushbu havoladan"),s(p)]),n(" operator ustunligi haqida o'qishni tavsiya qilmoqchiman")]),q])}const _=r(k,[["render",w],["__file","1-dars.html.vue"]]);export{_ as default};
