import{_ as p,r as o,o as l,c,f as i,a as s,b as n,e,d as a}from"./app-a9a991a6.js";const r={},u=a(`<h1 id="ðŸ“”-14-dars" tabindex="-1"><a class="header-anchor" href="#ðŸ“”-14-dars" aria-hidden="true">#</a> ðŸ“” 14-dars</h1><h2 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> JSON</h2><p>JSON JavaScript Object Notation degan ma&#39;noni anglatadi. JSON sintaksisi JavaScript ob&#39;ekt belgilari sintaksisidan olingan, ammo JSON formati faqat matn yoki satrdir. JSON saqlash va tashish uchun engil vaznli ma&#39;lumotlar formatidir. JSON asosan serverdan mijozga maÊ¼lumotlar yuborilganda ishlatiladi. JSON - bu XML ga ishlatish uchun qulay muqobil.</p><p><strong>Misol:</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
<span class="token string-property property">&quot;users&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;firstName&quot;</span><span class="token operator">:</span><span class="token string">&quot;Asabeneh&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;lastName&quot;</span><span class="token operator">:</span><span class="token string">&quot;Yetayeh&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">250</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span><span class="token string">&quot;asab@asb.com&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;firstName&quot;</span><span class="token operator">:</span><span class="token string">&quot;Alex&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;lastName&quot;</span><span class="token operator">:</span><span class="token string">&quot;James&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">25</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span><span class="token string">&quot;alex@alex.com&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;firstName&quot;</span><span class="token operator">:</span><span class="token string">&quot;Lidiya&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;lastName&quot;</span><span class="token operator">:</span><span class="token string">&quot;Tekle&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">28</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span><span class="token string">&quot;lidiya@lidiya.com&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Yuqoridagi JSON misoli oddiy ob&#39;ekt uchun unchalik farq qilmaydi. Xo&#39;sh, qanday farq bor? Farqi shundaki, JSON ob&#39;ektining kaliti qo&#39;sh tirnoqli bo&#39;lishi kerak yoki u satr bo&#39;lishi kerak. JavaScript Ob&#39;ekti va JSON juda o&#39;xshash, biz JSONni Ob&#39;ektga va Ob&#39;ektni JSONga o&#39;zgartirishimiz mumkin.</p><p>Keling, yuqoridagi misolni batafsil ko&#39;rib chiqaylik, u jingalak qavs bilan boshlanadi. Jingalak qavs ichida qiymatlar qatoriga ega bo&#39;lgan &quot;foydalanuvchilar&quot; tugmasi mavjud. Massiv ichida bizda turli xil ob&#39;ektlar bor va har bir ob&#39;ektda kalitlar mavjud, har bir kalitda qo&#39;sh tirnoq bo&#39;lishi kerak. Misol uchun, biz faqat firstName o&#39;rniga &quot;firstNaMe&quot; dan foydalanamiz, lekin ob&#39;ektda biz qo&#39;sh tirnoqsiz kalitlardan foydalanamiz. Bu ob&#39;ekt va JSON o&#39;rtasidagi asosiy farq. Keling, JSON haqida ko&#39;proq misollarni ko&#39;rib chiqaylik.</p><p><strong>Misol:</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;Alex&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;alex@alex.com&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;skills&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;CSS&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;JavaScript&quot;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;isLoggedIn&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;points&quot;</span><span class="token operator">:</span> <span class="token number">30</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;Asab&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;asab@asab.com&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;skills&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;CSS&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;JavaScript&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Redux&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;MongoDB&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Express&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;React&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Node&quot;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;isLoggedIn&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;points&quot;</span><span class="token operator">:</span> <span class="token number">50</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;Brook&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;daniel@daniel.com&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;skills&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;CSS&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;JavaScript&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;React&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Redux&quot;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;isLoggedIn&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;points&quot;</span><span class="token operator">:</span> <span class="token number">50</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;Daniel&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;daniel@alex.com&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;skills&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;CSS&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;JavaScript&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Python&quot;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;isLoggedIn&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;points&quot;</span><span class="token operator">:</span> <span class="token number">40</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;John&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;john@john.com&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;skills&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;CSS&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;JavaScript&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;React&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Redux&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Node.js&quot;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;isLoggedIn&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;points&quot;</span><span class="token operator">:</span> <span class="token number">50</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;Thomas&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;thomas@thomas.com&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;skills&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;CSS&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;JavaScript&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;React&quot;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;isLoggedIn&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;points&quot;</span><span class="token operator">:</span> <span class="token number">40</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;Paul&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;paul@paul.com&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;skills&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;CSS&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;JavaScript&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;MongoDB&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Express&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;React&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Node&quot;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;isLoggedIn&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;points&quot;</span><span class="token operator">:</span> <span class="token number">40</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="json-ni-javascript-obyektiga-aylantirish" tabindex="-1"><a class="header-anchor" href="#json-ni-javascript-obyektiga-aylantirish" aria-hidden="true">#</a> JSON-ni JavaScript obyektiga aylantirish</h3><p>Ko&#39;pincha biz JSON ma&#39;lumotlarini HTTP javobidan yoki fayldan olamiz, lekin biz JSONni satr sifatida saqlashimiz va namoyish qilish uchun Ob&#39;ektga o&#39;zgartirishimiz mumkin. JavaScript-da JSON kalit so&#39;zida parse () va stringify() usullari mavjud. JSONni ob&#39;ektga o&#39;zgartirmoqchi bo&#39;lganimizda, biz JSONni JSON.parse() yordamida tahlil qilamiz . Ob&#39;ektni JSONga o&#39;zgartirmoqchi bo&#39;lganimizda biz JSON.stringify() dan foydalanamiz .</p><h4 id="json-parse" tabindex="-1"><a class="header-anchor" href="#json-parse" aria-hidden="true">#</a> JSON.parse()</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>json<span class="token punctuation">[</span><span class="token punctuation">,</span> reviver<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// json or text , the data</span>
<span class="token comment">// reviver is an optional callback function</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> usersText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{
&quot;users&quot;:[
  {
    &quot;firstName&quot;:&quot;Asabeneh&quot;,
    &quot;lastName&quot;:&quot;Yetayeh&quot;,
    &quot;age&quot;:250,
    &quot;email&quot;:&quot;asab@asb.com&quot;
  },
  {
    &quot;firstName&quot;:&quot;Alex&quot;,
    &quot;lastName&quot;:&quot;James&quot;,
    &quot;age&quot;:25,
    &quot;email&quot;:&quot;alex@alex.com&quot;
  },
  {
  &quot;firstName&quot;:&quot;Lidiya&quot;,
  &quot;lastName&quot;:&quot;Tekle&quot;,
  &quot;age&quot;:28,
  &quot;email&quot;:&quot;lidiya@lidiya.com&quot;
  }
]
}</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">const</span> usersObj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>usersText<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>usersObj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="json-parse-bilan-reviver-funksiyasidan-foydalanish" tabindex="-1"><a class="header-anchor" href="#json-parse-bilan-reviver-funksiyasidan-foydalanish" aria-hidden="true">#</a> JSON.parse() bilan reviver funksiyasidan foydalanish</h3><p>Reviver funktsiyasidan formatlovchi sifatida foydalanish uchun biz ism va familiya qiymatini formatlashni xohlagan kalitlarni qo&#39;yamiz. Aytaylik, biz JSON ma&#39;lumotlarining ismi va familiyasini formatlashdan manfaatdormiz.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> usersText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{
&quot;users&quot;:[
  {
    &quot;firstName&quot;:&quot;Asabeneh&quot;,
    &quot;lastName&quot;:&quot;Yetayeh&quot;,
    &quot;age&quot;:250,
    &quot;email&quot;:&quot;asab@asb.com&quot;
  },
  {
    &quot;firstName&quot;:&quot;Alex&quot;,
    &quot;lastName&quot;:&quot;James&quot;,
    &quot;age&quot;:25,
    &quot;email&quot;:&quot;alex@alex.com&quot;
  },
  {
  &quot;firstName&quot;:&quot;Lidiya&quot;,
  &quot;lastName&quot;:&quot;Tekle&quot;,
  &quot;age&quot;:28,
  &quot;email&quot;:&quot;lidiya@lidiya.com&quot;
  }
]
}</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">const</span> usersObj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>usersText<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> newValue <span class="token operator">=</span>
    <span class="token keyword">typeof</span> value <span class="token operator">==</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">&amp;&amp;</span> key <span class="token operator">!=</span> <span class="token string">&#39;email&#39;</span> <span class="token operator">?</span> value<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> value
  <span class="token keyword">return</span> newValue
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>usersObj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>JSON.parse ()</em> dan foydalanish juda qulay. Siz ixtiyoriy parametrdan o&#39;tishingiz shart emas, uni faqat kerakli parametr bilan ishlatishingiz mumkin va siz juda ko&#39;p narsaga erishasiz.</p><h3 id="ob-ektni-jsonga-aylantirish" tabindex="-1"><a class="header-anchor" href="#ob-ektni-jsonga-aylantirish" aria-hidden="true">#</a> Ob&#39;ektni JSONga aylantirish</h3><p>Ob&#39;ektni JSONga o&#39;zgartirmoqchi bo&#39;lganimizda biz <em>JSON.stringify()</em> dan foydalanamiz . Stringify usuli bitta talab qilinadigan parametr va ikkita ixtiyoriy parametrni oladi. O&#39;zgartirish moslamasi filtr sifatida ishlatiladi va bo&#39;sh joy - chuqurchalar. Agar biz ob&#39;ektdan biron bir kalitni filtrlashni istamasak, biz aniqlanmagan holda o&#39;tishimiz mumkin.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> replacer<span class="token punctuation">,</span> space<span class="token punctuation">)</span>
<span class="token comment">// json or text , the data</span>
<span class="token comment">// reviver is an optional callback function</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Keling, quyidagi ob&#39;ektni satrga aylantiramiz. Avval foydalanishga ruxsat bering, barcha kalitlarni saqlab qo&#39;ying va bizda 4 ta bo&#39;sh joy bo&#39;lsin.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">Alex</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;alex@alex.com&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isLoggedIn</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">points</span><span class="token operator">:</span> <span class="token number">30</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Asab</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;asab@asab.com&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;Redux&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;MongoDB&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;Express&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;Node&#39;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isLoggedIn</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">points</span><span class="token operator">:</span> <span class="token number">50</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Brook</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;daniel@daniel.com&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Redux&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isLoggedIn</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">points</span><span class="token operator">:</span> <span class="token number">50</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Daniel</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;daniel@alex.com&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isLoggedIn</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">points</span><span class="token operator">:</span> <span class="token number">40</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">John</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;john@john.com&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Redux&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Node.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isLoggedIn</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">points</span><span class="token operator">:</span> <span class="token number">50</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Thomas</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;thomas@thomas.com&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;React&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isLoggedIn</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">points</span><span class="token operator">:</span> <span class="token number">40</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Paul</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;paul@paul.com&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;MongoDB&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;Express&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;Node&#39;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isLoggedIn</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">points</span><span class="token operator">:</span> <span class="token number">40</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span> <span class="token comment">// matn JSON- degan ma&#39;noni anglatadi, chunki json ob&#39;ektning satr shaklidir.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">{</span>
    <span class="token string">&quot;Alex&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;email&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;alex@alex.com&quot;</span>,
        <span class="token string">&quot;skills&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span>,
            <span class="token string">&quot;CSS&quot;</span>,
            <span class="token string">&quot;JavaScript&quot;</span>
        <span class="token punctuation">]</span>,
        <span class="token string">&quot;age&quot;</span><span class="token builtin class-name">:</span> <span class="token number">20</span>,
        <span class="token string">&quot;isLoggedIn&quot;</span><span class="token builtin class-name">:</span> false,
        <span class="token string">&quot;points&quot;</span><span class="token builtin class-name">:</span> <span class="token number">30</span>
    <span class="token punctuation">}</span>,
    <span class="token string">&quot;Asab&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;email&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;asab@asab.com&quot;</span>,
        <span class="token string">&quot;skills&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span>,
            <span class="token string">&quot;CSS&quot;</span>,
            <span class="token string">&quot;JavaScript&quot;</span>,
            <span class="token string">&quot;Redux&quot;</span>,
            <span class="token string">&quot;MongoDB&quot;</span>,
            <span class="token string">&quot;Express&quot;</span>,
            <span class="token string">&quot;React&quot;</span>,
            <span class="token string">&quot;Node&quot;</span>
        <span class="token punctuation">]</span>,
        <span class="token string">&quot;age&quot;</span><span class="token builtin class-name">:</span> <span class="token number">25</span>,
        <span class="token string">&quot;isLoggedIn&quot;</span><span class="token builtin class-name">:</span> false,
        <span class="token string">&quot;points&quot;</span><span class="token builtin class-name">:</span> <span class="token number">50</span>
    <span class="token punctuation">}</span>,
    <span class="token string">&quot;Brook&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;email&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;daniel@daniel.com&quot;</span>,
        <span class="token string">&quot;skills&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span>,
            <span class="token string">&quot;CSS&quot;</span>,
            <span class="token string">&quot;JavaScript&quot;</span>,
            <span class="token string">&quot;React&quot;</span>,
            <span class="token string">&quot;Redux&quot;</span>
        <span class="token punctuation">]</span>,
        <span class="token string">&quot;age&quot;</span><span class="token builtin class-name">:</span> <span class="token number">30</span>,
        <span class="token string">&quot;isLoggedIn&quot;</span><span class="token builtin class-name">:</span> true,
        <span class="token string">&quot;points&quot;</span><span class="token builtin class-name">:</span> <span class="token number">50</span>
    <span class="token punctuation">}</span>,
    <span class="token string">&quot;Daniel&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;email&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;daniel@alex.com&quot;</span>,
        <span class="token string">&quot;skills&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span>,
            <span class="token string">&quot;CSS&quot;</span>,
            <span class="token string">&quot;JavaScript&quot;</span>,
            <span class="token string">&quot;Python&quot;</span>
        <span class="token punctuation">]</span>,
        <span class="token string">&quot;age&quot;</span><span class="token builtin class-name">:</span> <span class="token number">20</span>,
        <span class="token string">&quot;isLoggedIn&quot;</span><span class="token builtin class-name">:</span> false,
        <span class="token string">&quot;points&quot;</span><span class="token builtin class-name">:</span> <span class="token number">40</span>
    <span class="token punctuation">}</span>,
    <span class="token string">&quot;John&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;email&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;john@john.com&quot;</span>,
        <span class="token string">&quot;skills&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span>,
            <span class="token string">&quot;CSS&quot;</span>,
            <span class="token string">&quot;JavaScript&quot;</span>,
            <span class="token string">&quot;React&quot;</span>,
            <span class="token string">&quot;Redux&quot;</span>,
            <span class="token string">&quot;Node.js&quot;</span>
        <span class="token punctuation">]</span>,
        <span class="token string">&quot;age&quot;</span><span class="token builtin class-name">:</span> <span class="token number">20</span>,
        <span class="token string">&quot;isLoggedIn&quot;</span><span class="token builtin class-name">:</span> true,
        <span class="token string">&quot;points&quot;</span><span class="token builtin class-name">:</span> <span class="token number">50</span>
    <span class="token punctuation">}</span>,
    <span class="token string">&quot;Thomas&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;email&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;thomas@thomas.com&quot;</span>,
        <span class="token string">&quot;skills&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span>,
            <span class="token string">&quot;CSS&quot;</span>,
            <span class="token string">&quot;JavaScript&quot;</span>,
            <span class="token string">&quot;React&quot;</span>
        <span class="token punctuation">]</span>,
        <span class="token string">&quot;age&quot;</span><span class="token builtin class-name">:</span> <span class="token number">20</span>,
        <span class="token string">&quot;isLoggedIn&quot;</span><span class="token builtin class-name">:</span> false,
        <span class="token string">&quot;points&quot;</span><span class="token builtin class-name">:</span> <span class="token number">40</span>
    <span class="token punctuation">}</span>,
    <span class="token string">&quot;Paul&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;email&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;paul@paul.com&quot;</span>,
        <span class="token string">&quot;skills&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;HTML&quot;</span>,
            <span class="token string">&quot;CSS&quot;</span>,
            <span class="token string">&quot;JavaScript&quot;</span>,
            <span class="token string">&quot;MongoDB&quot;</span>,
            <span class="token string">&quot;Express&quot;</span>,
            <span class="token string">&quot;React&quot;</span>,
            <span class="token string">&quot;Node&quot;</span>
        <span class="token punctuation">]</span>,
        <span class="token string">&quot;age&quot;</span><span class="token builtin class-name">:</span> <span class="token number">20</span>,
        <span class="token string">&quot;isLoggedIn&quot;</span><span class="token builtin class-name">:</span> false,
        <span class="token string">&quot;points&quot;</span><span class="token builtin class-name">:</span> <span class="token number">40</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="json-stringify-bilan-filtr-massividan-foydalanish" tabindex="-1"><a class="header-anchor" href="#json-stringify-bilan-filtr-massividan-foydalanish" aria-hidden="true">#</a> JSON.stringify bilan filtr massividan foydalanish</h3><p>Keling, almashtirgichni filtr sifatida ishlatamiz. Foydalanuvchi ob&#39;ektida kalitlarning uzoq ro&#39;yxati mavjud, ammo biz ulardan faqat bir nechtasi bilan qiziqamiz. Biz saqlamoqchi bo&#39;lgan kalitlarni misolda ko&#39;rsatilganidek, massivga joylashtiramiz va uni almashtiruvchi o&#39;rniga ishlatamiz.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Yetayeh&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">country</span><span class="token operator">:</span> <span class="token string">&#39;Finland&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;Helsinki&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;alex@alex.com&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Pyhton&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>
  <span class="token literal-property property">isLoggedIn</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">points</span><span class="token operator">:</span> <span class="token number">30</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;firstName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lastName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;country&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;city&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">{</span>
    <span class="token string">&quot;firstName&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;Asabeneh&quot;</span>,
    <span class="token string">&quot;lastName&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;Yetayeh&quot;</span>,
    <span class="token string">&quot;country&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;Finland&quot;</span>,
    <span class="token string">&quot;city&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;Helsinki&quot;</span>,
    <span class="token string">&quot;age&quot;</span><span class="token builtin class-name">:</span> <span class="token number">250</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ðŸŒ• Siz g&#39;ayrioddiysiz. Endi siz ma&#39;lumotlarni saqlash yoki HTTP serverini yuborish uchun foydalanishingiz mumkin bo&#39;lgan engil ma&#39;lumotlar formatini bildingiz. Siz buyuklik sari 16 qadam oldindasiz. Endi miyangiz va mushaklaringiz uchun bir nechta mashqlarni bajaring.</p><h2 id="html5-web-storage" tabindex="-1"><a class="header-anchor" href="#html5-web-storage" aria-hidden="true">#</a> HTML5 Web Storage</h2><p>Web Storage (sessionStorage va localStorage) yangi HTML5 API boÊ»lib, anÊ¼anaviy cookie-fayllarga nisbatan muhim afzalliklarni taqdim etadi. HTML5 dan oldin dastur ma&#39;lumotlari har bir server so&#39;roviga kiritilgan cookie fayllarida saqlanishi kerak edi. Veb-saqlash yanada xavfsizroq va katta hajmdagi ma&#39;lumotlar veb-sayt ishlashiga ta&#39;sir qilmasdan mahalliy sifatida saqlanishi mumkin. Ko&#39;pgina veb-brauzerlarda cookie-fayllarni saqlash chegarasi har bir cookie fayli uchun taxminan 4 KB ni tashkil qiladi. Biz saqlash joylari ancha kattaroq ma&#39;lumotlarni (kamida 5 MB) saqlashi mumkin va hech qachon serverga o&#39;tkazilmaydi. Bitta yoki bir kelib chiqishi barcha saytlar bir xil ma&#39;lumotlarni saqlashi va ularga kirishi mumkin.</p><p>Saqlanayotgan ma&#39;lumotlarga JavaScript yordamida kirish mumkin, bu sizga an&#39;anaviy ravishda server tomonida dasturlash va relyatsion ma&#39;lumotlar bazalarini o&#39;z ichiga olgan ko&#39;p narsalarni qilish uchun mijoz tomoni skriptlaridan foydalanish imkoniyatini beradi. Ikkita Web Storage obyekti mavjud:</p><ul><li>sessionStorage</li><li>localStorage</li></ul><p>localStorage sessionStorage-ga o&#39;xshaydi, bundan tashqari localStorage-da saqlangan ma&#39;lumotlarning amal qilish muddati bo&#39;lmasa-da, sessionStorage-da saqlangan ma&#39;lumotlar sahifa sessiyasi tugaganda, ya&#39;ni sahifa yopilganda tozalanadi.</p><p>Shuni ta&#39;kidlash kerakki, localStorage yoki sessionStorage-da saqlangan ma&#39;lumotlar sahifaning protokoliga xosdir.</p><p>Kalitlar va qiymatlar har doim satrlardir (esda tutingki, ob&#39;ektlarda bo&#39;lgani kabi, butun sonli kalitlar avtomatik ravishda satrlarga aylantiriladi).</p>`,36),k=a('<h3 id="sessionstorage" tabindex="-1"><a class="header-anchor" href="#sessionstorage" aria-hidden="true">#</a> sessionStorage</h3><p>sessionStorage faqat brauzer yorlig&#39;i yoki oyna sessiyasida mavjud. U bitta veb-sahifa seansida ma&#39;lumotlarni saqlash uchun mo&#39;ljallangan. Ya&#39;ni, agar oyna yopilsa, sessiya ma&#39;lumotlari o&#39;chiriladi. SessionStorage va localStorage shunga o&#39;xshash usullarga ega bo&#39;lgani uchun biz faqat localStorage-ga e&#39;tibor qaratamiz.</p><h3 id="localstorage" tabindex="-1"><a class="header-anchor" href="#localstorage" aria-hidden="true">#</a> localStorage</h3><p>HTML5 localStorage - bu veb-xotira API-ning paragrafi bo&#39;lib, u brauzerda amal qilish muddati tugamaydigan ma&#39;lumotlarni saqlash uchun ishlatiladi. Ma&#39;lumotlar brauzer yopilgandan keyin ham brauzerda mavjud bo&#39;ladi. localStorage brauzer seanslari orasida ham saqlanadi. Bu shuni anglatadiki, ma&#39;lumotlar brauzer yopilganda va qayta ochilganda, shuningdek, yorliqlar va oynalar o&#39;rtasida darhol mavjud bo&#39;ladi.</p><p>Veb saqlash ma&#39;lumotlari, har ikkala holatda ham, turli brauzerlar o&#39;rtasida mavjud emas. Masalan, Firefox-da yaratilgan saqlash ob&#39;ektlariga xuddi cookie fayllari kabi Internet Explorer-da kirish mumkin emas. Mahalliy xotirada ishlashning beshta usuli mavjud: <em>setItem(), getItem(), removeItem(), clear(), key()</em></p><h3 id="veb-xotiralardan-foydalanish-holati" tabindex="-1"><a class="header-anchor" href="#veb-xotiralardan-foydalanish-holati" aria-hidden="true">#</a> Veb-xotiralardan foydalanish holati</h3><p>Veb-xotiralardan foydalanishning ba&#39;zi holatlari</p><ul><li>ma&#39;lumotlarni vaqtincha saqlash</li><li>foydalanuvchi xarid qilish savatiga joylashtirgan mahsulotlarni saqlash</li><li>ma&#39;lumotlar sahifa so&#39;rovlari, bir nechta brauzer yorliqlari, shuningdek, localStorage yordamida brauzer seanslari o&#39;rtasida mavjud bo&#39;lishi mumkin</li><li>localStorage yordamida butunlay oflayn rejimda foydalanish mumkin</li><li>Keyinchalik so&#39;rovlar sonini kamaytirish uchun mijozda ba&#39;zi statik ma&#39;lumotlar saqlanganida veb-xotira ajoyib ishlash yutug&#39;i bo&#39;lishi mumkin. Base64 kodlash yordamida hatto tasvirlar ham satrlarda saqlanishi mumkin.</li><li>foydalanuvchi autentifikatsiya usuli uchun foydalanish mumkin</li></ul><p>Yuqorida keltirilgan misollar uchun localStorage-dan foydalanish mantiqan to&#39;g&#39;ri keladi. O&#39;shanda biz sessionStorage-dan qachon foydalanishimiz kerak, deb hayron bo&#39;lishingiz mumkin.</p><p>Bunday hollarda, oyna yopilishi bilanoq biz ma&#39;lumotlardan xalos bo&#39;lishni xohlaymiz. Yoki, ehtimol, agar dastur boshqa oynada ochilgan bir xil dasturga xalaqit berishini xohlamasak. Ushbu stsenariylar eng yaxshi sessionStorage bilan xizmat qiladi.</p><p>Keling, ushbu Web Storage API-laridan qanday foydalanishni ko&#39;rib chiqaylik.</p><h2 id="html5-veb-xotira-ob-ektlari" tabindex="-1"><a class="header-anchor" href="#html5-veb-xotira-ob-ektlari" aria-hidden="true">#</a> HTML5 veb-xotira ob&#39;ektlari</h2><p>HTML veb-xotirasi mijozda ma&#39;lumotlarni saqlash uchun ikkita ob&#39;ektni taqdim etadi:</p><ul><li>window.localStorage - amal qilish muddati tugamaydigan ma&#39;lumotlarni saqlaydi</li><li>window.sessionStorage - bir seans uchun ma&#39;lumotlarni saqlaydi (brauzer yorlig&#39;i yopilganda ma&#39;lumotlar yo&#39;qoladi) Ko&#39;pgina zamonaviy brauzerlar veb-xotirani qo&#39;llab-quvvatlaydi, ammo localStorage va sessionStorage uchun brauzer yordamini tekshirish yaxshidir. Keling, Web Storage ob&#39;ektlari uchun mavjud usullarni ko&#39;rib chiqaylik.</li></ul><p>Web Storage objects:</p><ul><li><em>localStorage</em> - localStorage ob&#39;ektini ko&#39;rsatish uchun</li><li><em>localStorage.clear()</em> - lokal xotiradagi hamma narsani o&#39;chirish uchun</li><li><em>localStorage.setItem()</em> - localStorage-da ma&#39;lumotlarni saqlash uchun. U kalit va qiymat parametrlarini oladi.</li><li><em>localStorage.getItem()</em> - localStorage-da saqlangan ma&#39;lumotlarni ko&#39;rsatish uchun. Parametr sifatida kalitni oladi.</li><li><em>localStorage.removeItem()</em> - localStorage-dan saqlangan elementni olib tashlash uchun. U kalitni parametr sifatida oladi.</li><li><em>localStorage.key()</em> - localStorage-da saqlangan ma&#39;lumotlarni ko&#39;rsatish uchun. Parametr sifatida indeksni oladi.</li></ul>',16),d=a(`<h3 id="elementni-localstorage-ga-sozlash" tabindex="-1"><a class="header-anchor" href="#elementni-localstorage-ga-sozlash" aria-hidden="true">#</a> Elementni localStorage-ga sozlash</h3><p>Biz ma&#39;lumotlarni localStorage-da saqlashni o&#39;rnatganimizda, u satr sifatida saqlanadi. Agar biz massiv yoki ob&#39;ektni saqlayotgan bo&#39;lsak, aks holda biz massiv tuzilishini yoki asl ma&#39;lumotlarning ob&#39;ekt tuzilishini yo&#39;qotmasak, formatni saqlab qolish uchun avval uni qatorlashtiramiz.</p><p>Biz ma&#39;lumotlarni localStorage-da <em>localStorage.setItem</em> usuli yordamida saqlaymiz.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//syntax</span>
localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Satrni localStorageda saqlash</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;firstName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">)</span> <span class="token comment">// since the value is string we do not stringify it</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Storage <span class="token punctuation">{</span>firstName: <span class="token string">&#39;Asabeneh&#39;</span>, length: <span class="token number">1</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Raqamni localStorageda saqlash</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> Storage <span class="token punctuation">{</span>age: <span class="token string">&#39;200&#39;</span>, firstName: <span class="token string">&#39;Asabeneh&#39;</span>, length: <span class="token number">2</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Massivni localStorageda saqlash. Agar biz massiv, ob&#39;ekt yoki ob&#39;ekt massivini saqlayotgan bo&#39;lsak, avval ob&#39;ektni stringifikatsiya qilishimiz kerak. Quyidagi misolga qarang.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> skills <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;JS&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;React&#39;</span><span class="token punctuation">]</span>
<span class="token comment">//Formatni saqlab qolish uchun avvalo malakalar massivini stringizatsiya qilish kerak. </span>
<span class="token keyword">const</span> skillsJSON <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>skills<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;skills&#39;</span><span class="token punctuation">,</span> skillsJSON<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Storage <span class="token punctuation">{</span>age: <span class="token string">&#39;200&#39;</span>, firstName: <span class="token string">&#39;Asabeneh&#39;</span>, skills: <span class="token string">&#39;HTML,CSS,JS,React&#39;</span>, length: <span class="token number">3</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> skills <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">tech</span><span class="token operator">:</span> <span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">tech</span><span class="token operator">:</span> <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token number">9</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">tech</span><span class="token operator">:</span> <span class="token string">&#39;JS&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">tech</span><span class="token operator">:</span> <span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token number">9</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">tech</span><span class="token operator">:</span> <span class="token string">&#39;Redux&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">tech</span><span class="token operator">:</span> <span class="token string">&#39;Node&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">tech</span><span class="token operator">:</span> <span class="token string">&#39;MongoDB&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token keyword">let</span> skillJSON <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>skills<span class="token punctuation">)</span>
localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;skills&#39;</span><span class="token punctuation">,</span> skillJSON<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Ob&#39;ektni localStorageda saqlash. Ob&#39;ektlarni localStorage-ga saqlashdan oldin, ob&#39;ektni stringizatsiya qilish kerak.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>
  <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;JS&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;React&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> userText <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> userText<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="localstorage-dan-element-olish" tabindex="-1"><a class="header-anchor" href="#localstorage-dan-element-olish" aria-hidden="true">#</a> LocalStorage dan element olish</h3><p>Mahalliy xotiradan ma&#39;lumotlarni <em>localStorage.getItem()</em> usuli yordamida olamiz.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//syntax</span>
localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> firstName <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;firstName&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> age <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> skills <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;skills&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>firstName<span class="token punctuation">,</span> age<span class="token punctuation">,</span> skills<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token string">&#39;Asabeneh&#39;</span>, <span class="token string">&#39;200&#39;</span>, <span class="token string">&#39;[&#39;</span>HTML<span class="token string">&#39;,&#39;</span>CSS<span class="token string">&#39;,&#39;</span>JS<span class="token string">&#39;,&#39;</span>React<span class="token string">&#39;]&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ko&#39;rib turganingizdek, mahorat string formatida. Uni oddiy massivga ajratish uchun JSON.parse() dan foydalanamiz.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> skills <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;skills&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> skillsObj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>skills<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>skillsObj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span>,<span class="token string">&#39;CSS&#39;</span>,<span class="token string">&#39;JS&#39;</span>,<span class="token string">&#39;React&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="lokalstorage-ni-tozalash" tabindex="-1"><a class="header-anchor" href="#lokalstorage-ni-tozalash" aria-hidden="true">#</a> LokalStorage ni tozalash</h3><p>Aniq usul mahalliy xotirada saqlangan hamma narsani tozalaydi</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>ðŸŒ• Siz qaror qildingiz. Endi siz veb-xotiralarni bilardingiz va kichik ma&#39;lumotlarni mijoz brauzerlarida qanday saqlashni bildingiz. Siz buyuklik sari 17 qadam oldindasiz. Endi miyangiz va mushaklaringiz uchun bir nechta mashqlarni bajaring.</p><h2 id="toza-kod-yozish" tabindex="-1"><a class="header-anchor" href="#toza-kod-yozish" aria-hidden="true">#</a> Toza kod yozish</h2><h3 id="javascript-style-guide-uslublar-bo-yicha-qo-llanma" tabindex="-1"><a class="header-anchor" href="#javascript-style-guide-uslublar-bo-yicha-qo-llanma" aria-hidden="true">#</a> JavaScript Style Guide(Uslublar bo&#39;yicha qo&#39;llanma)</h3><p>JavaScript uslubi uchun qo&#39;llanma - bu JavaScript kodini qanday yozish va tartibga solish kerakligini ko&#39;rsatadigan standartlar to&#39;plami. Ushbu bo&#39;limda biz JavaScript qo&#39;llanmalari va toza kodni qanday yozish haqida gaplashamiz.</p><p>JavaScript - bu dasturlash tili va inson tili kabi sintaksisga ega. JavaScript sintaksisi ishonchli va sodda bo&#39;lishi uchun ma&#39;lum bir uslub ko&#39;rsatmalariga muvofiq yozilishi kerak.</p><h3 id="nima-uchun-bizga-uslublar-bo-yicha-qo-llanma-kerak" tabindex="-1"><a class="header-anchor" href="#nima-uchun-bizga-uslublar-bo-yicha-qo-llanma-kerak" aria-hidden="true">#</a> Nima uchun bizga uslublar bo&#39;yicha qo&#39;llanma kerak</h3><p>Siz uzoq vaqtdan beri yolg&#39;iz kodlashdingiz, lekin hozir u jamoada ishlayotganga o&#39;xshaydi. Baribir, u ishlayotgan ekan, kod yozishingiz muhim emas, lekin bitta loyihada va bir xil kod bazasida 10 yoki 20 yoki undan ortiq dasturchidan iborat jamoada ishlaganingizda, kod tartibsiz va agar mavjud bo&#39;lsa, uni boshqarish qiyin bo&#39;ladi. amal qilish uchun hech qanday ko&#39;rsatmalar yo&#39;q.</p><p>Siz o&#39;zingizning ko&#39;rsatmalaringiz va konventsiyalaringizni ishlab chiqishingiz yoki yaxshi ishlab chiqilgan ko&#39;rsatmalarni moslashingiz mumkin. Keling, eng keng tarqalgan ko&#39;rsatmalarni bilib olaylik. Eng keng tarqalgan JavaScript uslubiy qo&#39;llanmalar:</p><ul><li>Airbnb JavaScript Style Guide</li><li>JavaScript Standard Style Guide</li><li>Google JavaScript Style Guide</li></ul><h4 id="airbnb-javascript-style-guide" tabindex="-1"><a class="header-anchor" href="#airbnb-javascript-style-guide" aria-hidden="true">#</a> Airbnb JavaScript Style Guide</h4>`,37),v={href:"https://github.com/airbnb/javascript",target:"_blank",rel:"noopener noreferrer"},m=s("h4",{id:"standard-javascript-style-guide",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#standard-javascript-style-guide","aria-hidden":"true"},"#"),n(" Standard JavaScript Style Guide")],-1),b={href:"https://standardjs.com/",target:"_blank",rel:"noopener noreferrer"},g=s("h4",{id:"google-javascript-style-guide",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#google-javascript-style-guide","aria-hidden":"true"},"#"),n(" Google JavaScript Style Guide")],-1),h={href:"https://google.github.io/styleguide/jsguide.html",target:"_blank",rel:"noopener noreferrer"},y=a(`<h3 id="javascript-kodlash-konventsiyalari" tabindex="-1"><a class="header-anchor" href="#javascript-kodlash-konventsiyalari" aria-hidden="true">#</a> JavaScript kodlash konventsiyalari</h3><p>Ushbu muammoni hal qilishda biz umumiy JavaScript kodlash yozish qoidalari va qo&#39;llanmalaridan ham foydalandik. Kodlash konventsiyalari - bu shaxs, jamoa yoki kompaniya tomonidan ishlab chiqilgan dasturlash uslubi bo&#39;yicha ko&#39;rsatmalar.</p><p>Kodlash konventsiyalari yordam beradi:</p><ul><li>toza kod yozish uchun</li><li>kodni o&#39;qishni yaxshilash uchun</li><li>kodni qayta ishlatish va texnik xizmat ko&#39;rsatishni yaxshilash</li></ul><p>Kodlash konventsiyalari o&#39;z ichiga oladi</p><ul><li>O&#39;zgaruvchilar uchun nom berish va e&#39;lon qilish qoidalari</li><li>Funktsiyalarni nomlash va e&#39;lon qilish qoidalari</li><li>Oq bo&#39;shliq, chekinish va sharhlardan foydalanish qoidalari</li><li>Dasturlash amaliyoti va tamoyillari</li></ul><h4 id="konventsiyalar-30daysofjavascript-da-qo-llaniladi" tabindex="-1"><a class="header-anchor" href="#konventsiyalar-30daysofjavascript-da-qo-llaniladi" aria-hidden="true">#</a> Konventsiyalar 30DaysOfJavaScript-da qo&#39;llaniladi</h4><p>Ushbu tanlovda biz odatiy JavaScript konventsiyasiga amal qilamiz, lekin men yozishni afzal ko&#39;rganimni ham qo&#39;shdim.</p><ul><li>Biz o&#39;zgaruvchilar va funktsiyalar uchun camelCase-dan foydalandik.</li><li>Barcha o&#39;zgaruvchilar nomlari harf bilan boshlanadi.</li><li>Biz konstantalar, massivlar, obyektlar va funksiyalar uchun const dan foydalanishni tanladik . Ikki tirnoq o&#39;rniga biz bitta qo&#39;shtirnoq yoki teskari belgidan foydalanishni tanladik. Yagona tirnoq modaga aylanib bormoqda.</li><li>Kodimizdan nuqtali vergulni ham olib tashladik, ammo bu shaxsiy imtiyozlar masalasidir.</li><li>Arifmetik operatorlar, belgilash operatorlari atrofida va verguldan keyin bo&#39;sh joy</li><li>Funktsiya deklaratsiyasi o&#39;rniga o&#39;q funktsiyasi</li><li>Agar funktsiya bitta chiziq bo&#39;lsa, yashirin qaytish o&#39;rniga aniq qaytish</li><li>Ob&#39;ektning oxirgi qiymatida oxirgi vergul yo&#39;q</li><li>Biz uzunroq versiya o&#39;rniga +=, -=, *= /=, **= ma&#39;qullaymiz</li><li>Biz console.log() dan foydalanganda, konsol qayerdan kelayotganini aniqlash uchun teglar qatori bilan chop etish yaxshidir.</li></ul><h4 id="o-zgaruvchilar" tabindex="-1"><a class="header-anchor" href="#o-zgaruvchilar" aria-hidden="true">#</a> O&#39;zgaruvchilar</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token keyword">let</span> firstName <span class="token operator">=</span> <span class="token string">&#39;Asabeneh&#39;</span>
<span class="token keyword">let</span> lastName <span class="token operator">=</span> <span class="token string">&#39;Yetayeh&#39;</span>
<span class="token keyword">let</span> country <span class="token operator">=</span> <span class="token string">&#39;Finland&#39;</span>
<span class="token keyword">let</span> city <span class="token operator">=</span> <span class="token string">&#39;Helsinki&#39;</span>

<span class="token keyword">const</span> <span class="token constant">PI</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span>
<span class="token keyword">const</span> gravity <span class="token operator">=</span> <span class="token number">9.81</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="massivlar" tabindex="-1"><a class="header-anchor" href="#massivlar" aria-hidden="true">#</a> Massivlar</h4><p>Biz massiv nomlarini koâ€˜plik qilishni tanladik</p><ul><li>names</li><li>numbers</li><li>countries</li><li>languages</li><li>skills</li><li>fruits</li><li>vegetables</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// arrays</span>
<span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Mathias&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Elias&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Brook&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3.14</span><span class="token punctuation">,</span> <span class="token number">9.81</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">98.6</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> countries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Finland&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Denmark&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sweden&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Norway&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Iceland&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> languages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Amharic&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Arabic&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;English&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;French&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Spanish&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> skills <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mango&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lemon&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> vegetables <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Tomato&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Potato&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Cabbage&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Onion&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Carrot&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="funksiyalar" tabindex="-1"><a class="header-anchor" href="#funksiyalar" aria-hidden="true">#</a> Funksiyalar</h4><p>Hozircha siz funksiya deklaratsiyasi, ifoda funksiyasi, strelka funksiyasi va anonim funksiyani juda yaxshi bilasiz. Ushbu muammoni hal qilishda biz boshqa funktsiyalar o&#39;rniga o&#39;q funktsiyasidan foydalanamiz. Ok funksiyasi boshqa funksiyalarni almashtirmaydi. Bundan tashqari, o&#39;q funktsiyalari va funksiya deklaratsiyasi mutlaqo bir xil emas. Shuning uchun siz qachon va qachon foydalanmasligingizni bilishingiz kerak. Farqni boshqa bo&#39;limlarda batafsil yoritib beraman. Agar funktsiya bitta chiziq bo&#39;lsa, biz yashirin qaytarish o&#39;rniga aniq qaytarishdan foydalanamiz</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// shaxsning toÊ»liq ismini chop etadigan funksiya </span>
<span class="token keyword">const</span> <span class="token function-variable function">printFullName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">firstName<span class="token punctuation">,</span> lastName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> lastName

<span class="token comment">// sonning kvadratini hisoblaydigan funksiya </span>
<span class="token keyword">const</span> <span class="token function-variable function">square</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n <span class="token operator">*</span> n

<span class="token comment">// tasodifiy hexa ranglarini yaratuvchi funktsiya </span>
<span class="token keyword">const</span> <span class="token function-variable function">hexaColor</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;0123456789abcdef&#39;</span>
  <span class="token keyword">let</span> hexa <span class="token operator">=</span> <span class="token string">&#39;#&#39;</span>
  <span class="token keyword">let</span> index
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    index <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> str<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    hexa <span class="token operator">+=</span> str<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> hexa
<span class="token punctuation">}</span>

<span class="token comment">// sana va vaqtni ko&#39;rsatadigan funktsiya</span>
<span class="token keyword">const</span> <span class="token function-variable function">showDateTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> year <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> month <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">const</span> date <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> hours <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> minutes <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hours <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    hours <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> hours
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>minutes <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    minutes <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> minutes
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> dateMonthYear <span class="token operator">=</span> date <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> year
  <span class="token keyword">const</span> time <span class="token operator">=</span> hours <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> minutes
  <span class="token keyword">const</span> fullTime <span class="token operator">=</span> dateMonthYear <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> time
  <span class="token keyword">return</span> fullTime
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="tsikllar" tabindex="-1"><a class="header-anchor" href="#tsikllar" aria-hidden="true">#</a> Tsikllar</h4><p>Ushbu qiyinchiliklarda biz ko&#39;p turdagi halqalarni ko&#39;rib chiqamiz. Muntazam for sikli, while sikli, do while sikli, for of loop, forEach tsikli va for in tsikli. Keling, ulardan qanday foydalanishimizni ko&#39;rib chiqaylik:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// massiv oÊ»zgaruvchisini eÊ¼lon qilish</span>
<span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Mathias&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Elias&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Brook&#39;</span><span class="token punctuation">]</span>

<span class="token comment">//  massivni muntazam for siklidan foydalanib iteratsiya qilish</span>
<span class="token keyword">let</span> len <span class="token operator">=</span> names<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>


<span class="token comment">// for of yordamida massivni takrorlash</span>
<span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">const</span> name <span class="token keyword">of</span> names<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">toUpperCasee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//  forEach yordamida massivni takrorlash</span>
names<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Yetayeh&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>
  <span class="token literal-property property">country</span><span class="token operator">:</span> <span class="token string">&#39;Finland&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;Helsinki&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Node&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;MongoDB&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;D3.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">isMarried</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ob-ektlar" tabindex="-1"><a class="header-anchor" href="#ob-ektlar" aria-hidden="true">#</a> Ob&#39;ektlar</h4><p>Biz ob&#39;ektni <strong>const</strong> bilan literal deb e&#39;lon qilamiz .</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// declaring object literal</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Yetayeh&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>
  <span class="token literal-property property">country</span><span class="token operator">:</span> <span class="token string">&#39;Finland&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;Helsinki&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Node&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;MongoDB&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;D3.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">isMarried</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
<span class="token comment">// ob&#39;ekt kalitlari orqali iteratsiya</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> person<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> person<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="shartlar" tabindex="-1"><a class="header-anchor" href="#shartlar" aria-hidden="true">#</a> Shartlar</h4><p>Oldingi qiyinchiliklarda if, if other, if another if, switch va uchlik operatorlarni aytamiz.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// sintaksis</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// kodning bu qismi to&#39;g&#39;ri shart uchun ishlaydi </span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
 <span class="token comment">// kodning bu qismi noto&#39;g&#39;ri holat uchun ishlaydi </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// if else</span>
<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">3</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>num<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is a positive number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>num<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is a negative number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">//  3 is a positive number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// if else if else if else</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is a positive number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is a negative number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is zero</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Switch More Examples</span>
<span class="token keyword">let</span> dayUserInput <span class="token operator">=</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&#39;What day is today ?&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> day <span class="token operator">=</span> dayUserInput<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">switch</span> <span class="token punctuation">(</span>day<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">case</span> <span class="token string">&#39;monday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Monday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">case</span> <span class="token string">&#39;tuesday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Tuesday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">case</span> <span class="token string">&#39;wednesday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Wednesday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">case</span> <span class="token string">&#39;thursday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Thursday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">case</span> <span class="token string">&#39;friday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Friday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">case</span> <span class="token string">&#39;saturday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Saturday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">case</span> <span class="token string">&#39;sunday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Sunday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">default</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;It is not a week day.&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ternary</span>

<span class="token keyword">let</span> isRaining <span class="token operator">=</span> <span class="token boolean">true</span>
isRaining
 <span class="token operator">?</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;You need a rain coat.&#39;</span><span class="token punctuation">)</span>
 <span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;No need for a rain coat.&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="klasslar" tabindex="-1"><a class="header-anchor" href="#klasslar" aria-hidden="true">#</a> Klasslar</h4><p>Biz katta harf bilan boshlanadigan CamelCase bilan sinfni e&#39;lon qilamiz.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// sintaksis </span>
<span class="token keyword">class</span> <span class="token class-name">ClassName</span> <span class="token punctuation">{</span>
    <span class="token comment">// code goes here</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// defining class</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">firstName<span class="token punctuation">,</span> lastName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// Check the output from here</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">=</span> firstName
    <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">=</span> lastName
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Qaysi uslub qo&#39;llanmasiga amal qilsangiz, izchil bo&#39;ling. Ba&#39;zi dasturlash paradigmalari va dizayn naqshlariga amal qiling. Esingizda bo&#39;lsin, agar siz kodingizni ma&#39;lum tartibda yoki uslubda yozmasangiz, kodingizni o&#39;qish qiyin bo&#39;ladi. Shunday qilib, o&#39;zingiz uchun yoki o&#39;qilishi mumkin bo&#39;lgan kod yozish orqali kodingizni o&#39;qimoqchi bo&#39;lgan kishi uchun yaxshilik qiling.</p><p>ðŸŒ• Siz tartiblisiz. Endi siz toza kod yozishni bilasiz, shuning uchun ingliz tilini biladigan har bir kishi sizning kodingizni tushunishi mumkin. Siz doimo rivojlanib borasiz va siz buyuklik sari 20 qadam oldindasiz.</p>`,37);function q(f,S){const t=o("ExternalLinkIcon");return l(),c("div",null,[u,i(" ![web_storage](../images/web_storage.png) "),k,i(" ![local_storage](../images/local_storage.png) "),d,s("p",null,[s("a",v,[n("Airbnb style guide"),e(t)]),n(" internetdagi eng mashhur JavaScript uslubiy qo'llanmalaridan biriga ega. U JavaScript-ning deyarli barcha jihatlarini qamrab oladi va u ko'plab ishlab chiquvchilar va kompaniyalar tomonidan qabul qilinadi. Airbnb uslubi bo'yicha qo'llanmani tekshirishingiz mumkin . Men ham sinab ko'rishni tavsiya qilaman. Ularning uslubini ishlatish juda oson va tushunish oson.")]),m,s("p",null,[n("Bu "),s("a",b,[n("style guide"),e(t)]),n(" Airbnb kabi mashhur emas, lekin uni ko'rib chiqishga arziydi. Ular uslubiy qo'llanmada nuqta-vergulni olib tashladilar.")]),g,s("p",null,[n("Men Google yo'riqnomasi haqida ko'p gapirmayman va men foydalanmadim, aksincha, ushbu "),s("a",h,[n("havolani"),e(t)]),n(" ko'rib chiqishingizni tavsiya qilaman.")]),y])}const x=p(r,[["render",q],["__file","14-dars.html.vue"]]);export{x as default};
