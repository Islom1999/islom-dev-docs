import{_ as i,o as a,c as e,d as l}from"./app-a9a991a6.js";const n={},r=l(`<h1 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> DockerFile</h1><h2 id="dockerfile-nima" tabindex="-1"><a class="header-anchor" href="#dockerfile-nima" aria-hidden="true">#</a> Dockerfile nima</h2><p>Dockerfile, Docker konteynerini yaratishning avtomatlashtirilgan texnologik vositasi hisoblanadi. Ushbu fayl, Docker obrazini o&#39;zgartirish, sozlash va konteynerning ma&#39;lum bir holatini belgilash uchun foydalaniladi. Dockerfile-ni yaratib, Docker obrazini o&#39;rnatish uchun quyidagi qadamlarni izohlashingiz mumkin:</p><ol><li><p>Yangi fayl yaratish: Bitta direktoriya ichida Dockerfile nomli fayl yaratish kerak. Fayl nomi o&#39;zgarishi mumkin, lekin umumiy ravishda &quot;Dockerfile&quot; nomini ishlatish maslahat beriladi.</p></li><li><p>Faylni ochish va tahrirlash: Yaratilgan Dockerfile-ni tanlang va faylni tahrirlashni boshlang. Dockerfile-ni foydalanuvchini talablari va xohishlari bo&#39;yicha sozlash uchun tahrir qilishingiz mumkin.</p></li><li><p>Direktivani belgilash: Dockerfile-dagi direktivlar, konteyner obrazini qanday o&#39;rnatish va sozlash haqida yo&#39;riqnoma hisoblanadi. Quyidagi direktivlar odatda foydalaniladi:</p></li></ol><ul><li><code>FROM</code>: Bazoviy obrazni belgilash.</li><li><code>RUN</code>: Komandani ishga tushirish.</li><li><code>COPY</code> yoki <code>ADD</code>: Fayllarni obrazga ko&#39;chirish.</li><li><code>WORKDIR</code>: Ish jarayoni uchun ish katalogini belgilash.</li><li><code>EXPOSE</code>: Konteyner uchun ochiq portni belgilash.</li><li><code>CMD</code> yoki <code>ENTRYPOINT</code>: Konteyner ishga tushganda amalga oshiriladigan asosiy buyruqni belgilash.</li></ul><ol start="4"><li><p>Faylni saqlash: Dockerfile-ni tahrirlaganingizdan so&#39;ng, o&#39;zgartirishlarni saqlashingiz kerak.</p></li><li><p>Docker obrazini o&#39;rnatish: Terminalda Dockerfile joylashgan direktoriyaga o&#39;ting va quyidagi komandani ishga tushiring:</p></li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-t</span> image_nomi:tag <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bu komanda Dockerfile-ni qabul qilib, Docker obrazini o&#39;rnatish uchun ishga tushiradi. <code>-t</code> parametri bilan obraz nomi va versiyasi belgilanadi. <code>.</code> nuqta belgisi joriy direktoriyani ifodalaydi.</p><p>Komanda bajarilgandan so&#39;ng Docker, Dockerfile-ni o&#39;qiydi, direktivalar ustida bajarilishi kerak bo&#39;lgan amallarni amalga oshiradi va natijadagi Docker obrazini yaratadi.</p><p>Shu bilan birga, Dockerfile-ni tahrirlab, direktivalar orqali Docker obrazini o&#39;rnatishingiz mumkin. Bu obrazni Docker Compose, Docker Swarm yoki boshqa usullar orqali ishlatishingiz mumkin.</p><h2 id="dockerfile-yaratish" tabindex="-1"><a class="header-anchor" href="#dockerfile-yaratish" aria-hidden="true">#</a> Dockerfile yaratish</h2><p>Dockerfile yaratish uchun quyidagi qadamlarni izohlashingiz mumkin:</p><ol><li><p>Yangi fayl yaratish: Bitta direktoriya ichida Dockerfile nomli fayl yaratish kerak. Fayl nomi o&#39;zgarishi mumkin, lekin umumiy ravishda &quot;Dockerfile&quot; nomini ishlatish maslahat beriladi.</p></li><li><p>Faylni ochish va tahrirlash: Dockerfile-ni tanlang va uning tarkibini tahrirlashni boshlang.</p></li><li><p><code>FROM</code> direktivasi: Obraz asosini belgilash uchun <code>FROM</code> direktivasini ishlatish kerak. Misol uchun, agar Python tilida yozilgan bazoviy bir Docker obrazidan foydalanishni xohlaysiz bo&#39;lsin, quyidagi satrni qo&#39;shing:</p><div class="language-Dockerfile line-numbers-mode" data-ext="Dockerfile"><pre class="language-Dockerfile"><code>FROM python:3.9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bu direktiva Docker obrazini tanlashda foydalaniladi. <code>python:3.9</code> obrazidan boshlaydigan o&#39;zgartirilgan bir obraz yaratiladi.</p></li><li><p>Qo&#39;shimcha direktivalar: Obrazni sozlash uchun qo&#39;shimcha direktivalarni qo&#39;shishingiz mumkin. Misol uchun, quyidagi direktivani qo&#39;shing:</p><div class="language-Dockerfile line-numbers-mode" data-ext="Dockerfile"><pre class="language-Dockerfile"><code>WORKDIR /app
COPY . /app
RUN pip install -r requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Bu direktivlar Dockerfile-ni quyidagi amallarni bajarishga buyuradi:</p><ul><li><code>WORKDIR</code>: Konteyner ichidagi ish katalogini <code>/app</code> deb belgilaydi.</li><li><code>COPY</code>: Loyiha katalogidagi barcha fayllarni <code>/app</code> papkaga nusxalaydi.</li><li><code>RUN</code>: <code>requirements.txt</code> faylidagi Python paktlarini o&#39;rnatish uchun <code>pip install</code> komandasini bajaradi.</li></ul></li><li><p>Faylni saqlash: Dockerfile-ni tahrirlaganingizdan so&#39;ng, o&#39;zgartirishlarni saqlashingiz kerak.</p></li><li><p>Docker obrazini yaratish: Terminalda Dockerfile-ni joylashgan direktoriyaga o&#39;ting va quyidagi komandani ishga tushiring:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-t</span> image_nomi:tag <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bu komanda Dockerfile-ni qabul qilib, Docker obrazini yaratish uchun ishga tushiradi. <code>-t</code> parametri bilan obraz nomi va versiyasi belgilanadi. <code>.</code> nuqta belgisi joriy direktoriyani ifodalaydi.</p><p>Komanda bajarilgandan so&#39;ng Docker, Dockerfile-ni o&#39;qiydi, direktivalar ustida bajarilishi kerak bo&#39;lgan amallarni amalga oshiradi va natijadagi Docker obrazini yaratadi.</p></li></ol><p>Shu bilan birga, Dockerfile-ni tahrirlab, direktivalar orqali Docker obrazini yaratishingiz mumkin. Obrazni Docker Compose, Docker Swarm yoki boshqa usull</p><p>ar orqali ishlatishingiz mumkin.</p>`,15),o=[r];function s(d,c){return a(),e("div",null,o)}const t=i(n,[["render",s],["__file","docker-file.html.vue"]]);export{t as default};
